C51 COMPILER V9.54   MAIN                                                                  05/13/2022 12:31:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include <intrins.h>
   3          typedef unsigned int u16;
   4          typedef unsigned char u8;
   5          sbit TX = P1^0;
   6          sbit RX = P1^1;
   7          float distance;
   8          u8 code t_display[]={                       //标准字库
   9          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  10              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  11          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  12              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  13              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  14          
  15          void smgshow_dist();
  16                  
  17          void hc138_select(u8 n)
  18          {
  19   1              switch(n)
  20   1              {
  21   2                      case 4: 
  22   2                              P2 = P2 & 0x1f | 0x80;  break;
  23   2                      case 5: 
  24   2                              P2 = P2 & 0x1f | 0xa0;  break;
  25   2                      case 6: 
  26   2                              P2 = P2 & 0x1f | 0xc0;  break;
  27   2                      case 7: 
  28   2                              P2 = P2 & 0x1f | 0xe0;  break;
  29   2                      
  30   2              }
  31   1      }
  32          
  33          void smg_delay()
  34          {
  35   1              u8 t = 100;
  36   1              while(t--);
  37   1      }
  38          
  39          void smgshow_bit(u8 pos, u8 dat)
  40          {
  41   1              hc138_select(6);
  42   1              P0 = 1 << pos;
  43   1              hc138_select(7);
  44   1              P0 = dat;
  45   1              smg_delay();
  46   1              P0 = 0xff;
  47   1      }
  48          
  49          void Delay12us()                //@12.000MHz
  50          {
  51   1              unsigned char i;
  52   1      
  53   1              _nop_();
  54   1              _nop_();
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 12:31:44 PAGE 2   

  55   1              i = 33;
  56   1              while (--i);
  57   1      }
  58          
  59          void Delay60ms()                //@12.000MHz
  60          {
  61   1              unsigned char i, j, k;
  62   1      
  63   1              _nop_();
  64   1              _nop_();
  65   1              i = 3;
  66   1              j = 189;
  67   1              k = 92;
  68   1              do
  69   1              {
  70   2                      do
  71   2                      {
  72   3                              while (--k);
  73   3                              smgshow_dist();             //added
  74   3                      } while (--j);
  75   2              } while (--i);
  76   1      }
  77          
  78          
  79          void sendwave()          //发出8个40Khz的脉冲
  80          {
  81   1              u8 i;
  82   1              
  83   1              for(i = 0; i < 8; i++){
  84   2                      TX = 1;
  85   2                      Delay12us();
  86   2                      TX = 0;
  87   2                      Delay12us();
  88   2              }
  89   1      }
  90          
  91          void tim0_init()
  92          {
  93   1              TMOD &= 0xf0;         //tim0十六位自动重装
  94   1              TH0 = 0x00;
  95   1              TL0 = 0x00;
  96   1              TR0 = 0;
  97   1      }
  98          
  99          void measure_distance()
 100          {
 101   1              u16 t;
 102   1              
 103   1              tim0_init();
 104   1              sendwave();
 105   1              TR0 = 1;
 106   1              while((RX == 1) && (TF0 == 0));      //TF0是TH0和TL0溢出标志
 107   1              TR0 = 0;                             //测量结束停止计时
 108   1              
 109   1              if(TF0 == 0){                        //说明测距正常结束
 110   2                      t = TH0;
 111   2                      t = (t << 8) | TL0;
 112   2                      distance = t * 0.017;
 113   2              }else{
 114   2                      TF0 = 0;
 115   2                      distance = 999;
 116   2              }
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 12:31:44 PAGE 3   

 117   1              
 118   1              Delay60ms();                         //两次测量之间加上延迟
 119   1      }
 120          
 121          void smgshow_dist()
 122          {
 123   1              smgshow_bit(5, ~t_display[(int)distance / 100]);
 124   1              smgshow_bit(6, ~t_display[(int)distance / 10 % 10]);
 125   1              smgshow_bit(7, ~t_display[(int)distance % 10]);
 126   1      }
 127          
 128          void main()
 129          {
 130   1              while(1)
 131   1              {
 132   2                      measure_distance();
 133   2              }
 134   1      }
 135          
 136          
 137          /* 小蜜蜂
 138          #include "reg52.h"
 139          #include "absacc.h"
 140          #include "intrins.h"
 141           
 142          sbit TX = P1^0;
 143          sbit RX = P1^1;
 144           
 145          unsigned int distance = 0;
 146           
 147          unsigned char code SMG_duanma[18]=
 148                          {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
 149                           0x88,0x80,0xc6,0xc0,0x86,0x8e,0xbf,0x7f};
 150           
 151          void DelaySMG(unsigned int t)
 152          {
 153                  while(t--);
 154          }
 155           
 156          void DisplaySMG_Bit(unsigned char pos, unsigned char value)
 157          {
 158                  XBYTE[0xE000] = 0xFF;
 159                  XBYTE[0xC000] = 0x01 << pos;
 160                  XBYTE[0xE000] = value;
 161          }
 162           
 163          void Display_Distance()
 164          {
 165                  if(distance == 999)
 166                  {
 167                          DisplaySMG_Bit(0, SMG_duanma[15]);                      //超出测量范围标志：F
 168                          DelaySMG(500);
 169                  }
 170                  else
 171                  {
 172                          DisplaySMG_Bit(5, SMG_duanma[distance / 100]);
 173                          DelaySMG(500);
 174                          DisplaySMG_Bit(6, SMG_duanma[(distance % 100) / 10]);
 175                          DelaySMG(500);
 176                          DisplaySMG_Bit(7, SMG_duanma[distance % 10]);
 177                          DelaySMG(500);
 178                  }
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 12:31:44 PAGE 4   

 179          }
 180           
 181          void Delay12us()                  //@12.000MHz 延时12us
 182          {
 183                  unsigned char i;
 184           
 185                  _nop_();
 186                  _nop_();
 187                  i = 33;
 188                  while (--i);
 189          }
 190           
 191          void Send_Wave()                 //产生8个40KHx超声波信号
 192          {
 193                  unsigned char i;
 194                  for(i = 0; i < 8; i++)
 195                  {
 196                          TX = 1;
 197                          Delay12us();    
 198                          TX = 0;
 199                          Delay12us();
 200                  }
 201          }
 202           
 203          void Measure_Distance()         //超声波测距
 204          {
 205                  unsigned int time = 0;
 206                  
 207                  TMOD &= 0x0f;               //定时器1模式0，13位，最大8192个计数脉冲                                                            
 208                  TL1 = 0x00;                                                                             
 209                  TH1 = 0x00;             
 210                  
 211                  Send_Wave();                    //发送超声波信号                                                        
 212                  TR1 = 1;            //启动定时器                                                
 213                  while((RX == 1) && (TF1 == 0));    //等待超声波信号返回或者等到测量超出范围
 214                  TR1 = 0;            //停止定时器                                
 215                  
 216                  if(TF1 == 0)                //正常测量范围                                                      
 217                  {
 218                          time = TH1;                                                                     
 219                          time = (time << 8) | TL1;               
 220                          distance = ((time / 10) * 17) / 100 + 3;
 221                  }
 222                  else                        //超出测量范围                      
 223                  {
 224                          TF1 = 0;
 225                          distance = 999;
 226                  }
 227          }
 228           
 229          void Delay(unsigned char n)        //数码管显示增强
 230          {
 231                  while(n--)
 232                  {
 233                          Display_Distance();
 234                  }
 235          }
 236           
 237          void main()
 238          {
 239                  while(1)
 240                  {
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 12:31:44 PAGE 5   

 241                          Measure_Distance();
 242                          Delay(10);
 243                  }
 244          }
 245          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    349    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.54   MAIN                                                                  05/13/2022 16:02:26 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "onewire.h"
   3          #include "iic.h"
   4          #include "ds1302.h"
   5          
   6          typedef unsigned char u8;
   7          typedef unsigned int u16;
   8          
   9          sbit TX = P1^0;
  10          sbit RX = P1^1;
  11          
  12          u8 templ, temph;
  13          u16 temp;
  14          u8 eeprom_dat;
  15          u8 s7_flag = 0;
  16          u8 adc_dat;
  17          float v_dat;
  18          u16 NE555_cnt;
  19          u16 NE555_pulse;
  20          u8 tim1_cnt = 0;
  21          float dist;
  22          u8 ds1302_wdaddr[] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
  23          u8 ds1302_rdaddr[] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
  24          u8 ds1302_buf[] = {0x50, 0x59, 0x23, 0x00, 0x00, 0x00, 0x00};
  25          
  26          u8 code t_display[]={                       //±ê×¼×Ö¿â
  27          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  28              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  29          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  30              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e};
  31          u8 code dot_display[]={0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 
             -7. 8. 9. -1
  32          
  33          void smgshow();
  34          
  35          void hc138_select(u8 n)
  36          {
  37   1              switch(n)
  38   1              {
  39   2                      case 4:
  40   2                              P2 = P2 & 0x1f | 0x80;  break;
  41   2                      case 5:
  42   2                              P2 = P2 & 0x1f | 0xa0;  break;
  43   2                      case 6:
  44   2                              P2 = P2 & 0x1f | 0xc0;  break;
  45   2                      case 7:
  46   2                              P2 = P2 & 0x1f | 0xe0;  break;
  47   2              }
  48   1      }
  49          
  50          void smg_delay()
  51          {
  52   1              u8 i = 100;
  53   1              while(i--);
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 16:02:26 PAGE 2   

  54   1      }
  55          
  56          void smgshow_bit(u8 pos, u8 dat)
  57          {
  58   1              hc138_select(6);
  59   1              P0 = 1 << pos;
  60   1              hc138_select(7);
  61   1              P0 = dat;
  62   1              smg_delay();
  63   1              P0 = 0xff;
  64   1      }
  65          
  66          void delay()
  67          {
  68   1              u8 i = 20;
  69   1              while(i--)
  70   1                      smgshow();
  71   1      }
  72          
  73          void gettemp_init()
  74          {
  75   1              do{
  76   2                      init_ds18b20();
  77   2                      Write_DS18B20(0xcc);
  78   2                      Write_DS18B20(0x44);
  79   2      //              delay();
  80   2                      init_ds18b20();
  81   2                      Write_DS18B20(0xcc);
  82   2                      Write_DS18B20(0xbe);
  83   2                      
  84   2                      templ = Read_DS18B20();
  85   2                      temph = Read_DS18B20();
  86   2                      temp = temph;
  87   2                      temp = (temp << 8) | templ;
  88   2                      if((temp & 0xf800) == 0x0000){
  89   3                              temp = (temp >> 4) * 10 + (temp & 0x0f) * 0.625;
  90   3                      }
  91   2              }while(temp == 850);
  92   1      }
  93          
  94          void get_temp()
  95          {
  96   1              init_ds18b20();
  97   1              Write_DS18B20(0xcc);
  98   1              Write_DS18B20(0x44);
  99   1              delay();
 100   1              init_ds18b20();
 101   1              Write_DS18B20(0xcc);
 102   1              Write_DS18B20(0xbe);
 103   1              
 104   1              templ = Read_DS18B20();
 105   1              temph = Read_DS18B20();
 106   1              temp = temph;
 107   1              temp = (temp << 8) | templ;
 108   1              if((temp & 0xf800) == 0x0000){
 109   2                      temp = (temp >> 4) * 10 + (temp & 0x0f) * 0.625;
 110   2              }
 111   1      }
 112          
 113          void smgshow_temp()
 114          {
 115   1              smgshow_bit(5, ~t_display[temp / 100]);
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 16:02:26 PAGE 3   

 116   1              smgshow_bit(6, ~dot_display[temp / 10 % 10]);
 117   1              smgshow_bit(7, ~t_display[temp % 10]);
 118   1      }
 119          
 120          void read_eeprom(u8 addr)
 121          {
 122   1              IIC_Start();
 123   1              IIC_SendByte(0xa0);
 124   1              IIC_WaitAck();
 125   1              IIC_SendByte(addr);
 126   1              IIC_WaitAck();
 127   1              
 128   1              IIC_Start();
 129   1              IIC_SendByte(0xa1);
 130   1              IIC_WaitAck();
 131   1              eeprom_dat = IIC_RecByte();
 132   1              IIC_SendAck(1);
 133   1              IIC_Stop();
 134   1      }
 135          
 136          void write_eeprom(u8 addr, u8 dat)
 137          {
 138   1              IIC_Start();
 139   1              IIC_SendByte(0xa0);
 140   1              IIC_WaitAck();
 141   1              IIC_SendByte(addr);
 142   1              IIC_WaitAck();
 143   1              IIC_SendByte(dat);
 144   1              IIC_WaitAck();
 145   1              IIC_Stop();
 146   1      }
 147          
 148          void pcf8591_adc(u8 channel)
 149          {
 150   1              IIC_Start();
 151   1              IIC_SendByte(0x90);
 152   1              IIC_WaitAck();
 153   1              IIC_SendByte(channel);
 154   1              IIC_WaitAck();
 155   1              
 156   1              IIC_Start();
 157   1              IIC_SendByte(0x91);
 158   1              IIC_WaitAck();
 159   1              adc_dat = IIC_RecByte();
 160   1              IIC_SendAck(1);
 161   1              IIC_Stop();
 162   1              
 163   1              v_dat = adc_dat * 1.97;
 164   1      }
 165          
 166          void pcf8591_dac(u8 dat)
 167          {
 168   1              IIC_Start();
 169   1              IIC_SendByte(0x90);
 170   1              IIC_WaitAck();
 171   1              IIC_SendByte(0x40);
 172   1              IIC_WaitAck();
 173   1              IIC_SendByte(dat);
 174   1              IIC_WaitAck();
 175   1              IIC_Stop();
 176   1      }
 177          
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 16:02:26 PAGE 4   

 178          void smgshow_volt()
 179          {
 180   1              smgshow_bit(5, ~dot_display[(int)v_dat / 100]);
 181   1              smgshow_bit(6, ~t_display[(int)v_dat / 10 % 10]);
 182   1              smgshow_bit(7, ~t_display[(int)v_dat % 10]);
 183   1      }
 184          
 185          void Delay5ms()         //@12.000MHz
 186          {
 187   1              unsigned char i, j;
 188   1      
 189   1              i = 59;
 190   1              j = 90;
 191   1              do
 192   1              {
 193   2                      while (--j);
 194   2              } while (--i);
 195   1      }
 196          
 197          void smgshow_eeprom()
 198          {
 199   1              smgshow_bit(0, ~t_display[eeprom_dat]);
 200   1      }
 201          
 202          void Delay10ms()                //@12.000MHz
 203          {
 204   1              unsigned char i, j;
 205   1      
 206   1              i = 117;
 207   1              j = 184;
 208   1              do
 209   1              {
 210   2                      while (--j);
 211   2              } while (--i);
 212   1      }
 213          
 214          void key_scan()
 215          {
 216   1              if(P30 == 0){
 217   2                      Delay10ms();
 218   2                      if(P30 == 0){
 219   3                              while(P30 == 0){
 220   4                                      smgshow();
 221   4                              }
 222   3                              s7_flag++;
 223   3                              if(s7_flag == 5)
 224   3                                      s7_flag = 0;
 225   3                      }
 226   2              }
 227   1      }
 228          
 229          //NE555
 230          void tim_init()
 231          {
 232   1              TMOD = 0x16;
 233   1              TH1 = (65535 - 50000) / 256;
 234   1              TL1 = (65535 - 50000) % 256;
 235   1              TH0 = 0xff;
 236   1              TL0 = 0xff;
 237   1              ET0 = 1;
 238   1              ET1 = 1;
 239   1              TR0 = 1;
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 16:02:26 PAGE 5   

 240   1              TR1 = 1;
 241   1              EA = 1;
 242   1      }
 243          
 244          void smgshow_pulse()
 245          {
 246   1              if(NE555_pulse > 9999)
 247   1                      smgshow_bit(3, ~t_display[NE555_pulse / 10000]);
 248   1              if(NE555_pulse > 999)
 249   1                      smgshow_bit(4, ~t_display[NE555_pulse / 1000 % 10]);
 250   1              if(NE555_pulse > 99)
 251   1                      smgshow_bit(5, ~t_display[NE555_pulse / 100 % 10]);
 252   1              if(NE555_pulse > 9)
 253   1                      smgshow_bit(6, ~t_display[NE555_pulse / 10 % 10]);
 254   1              smgshow_bit(7, ~t_display[NE555_pulse % 10]);
 255   1      }
 256          
 257          void write_ds1302()
 258          {
 259   1              u8 i;
 260   1              
 261   1              Write_Ds1302_Byte(0x8e, 0x00);
 262   1              for(i = 0; i < 7; i++){
 263   2                      Write_Ds1302_Byte(ds1302_wdaddr[i], ds1302_buf[i]);
 264   2              }
 265   1              Write_Ds1302_Byte(0x8e, 0x80);
 266   1      }
 267          
 268          void read_ds1302()
 269          {
 270   1              u8 i;
 271   1      
 272   1              for(i = 0; i < 7; i++){
 273   2                      ds1302_buf[i] = Read_Ds1302_Byte(ds1302_rdaddr[i]);
 274   2              }
 275   1      }
 276          
 277          void smgshow_time()
 278          {
 279   1              smgshow_bit(0, ~t_display[ds1302_buf[2] / 16]);
 280   1              smgshow_bit(1, ~t_display[ds1302_buf[2] % 16]);
 281   1              smgshow_bit(2, ~t_display[17]);
 282   1              smgshow_bit(3, ~t_display[ds1302_buf[1] / 16]);
 283   1              smgshow_bit(4, ~t_display[ds1302_buf[1] % 16]);
 284   1              smgshow_bit(5, ~t_display[17]);
 285   1              smgshow_bit(6, ~t_display[ds1302_buf[0] / 16]);
 286   1              smgshow_bit(7, ~t_display[ds1302_buf[0] % 16]);
 287   1      }
 288          
 289          void Delay12us()                //@12.000MHz
 290          {
 291   1              unsigned char i;
 292   1      
 293   1              _nop_();
 294   1              _nop_();
 295   1              i = 33;
 296   1              while (--i);
 297   1      }
 298          
 299          void tim1_init()
 300          {
 301   1              TMOD = 0x00;
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 16:02:26 PAGE 6   

 302   1              TH1 = 0;
 303   1              TL1 = 0;
 304   1              TR1 = 0;
 305   1      }
 306          
 307          void send_wave()
 308          {
 309   1              u8 i;
 310   1              for(i = 0; i < 8; i++){
 311   2                      TX = 1;
 312   2                      Delay12us();
 313   2                      TX = 0;
 314   2                      Delay12us();
 315   2              }
 316   1      }
 317          
 318          void Delay60ms()                //@12.000MHz
 319          {
 320   1              unsigned char i, j, k;
 321   1      
 322   1              _nop_();
 323   1              _nop_();
 324   1              i = 3;
 325   1              j = 189;
 326   1              k = 92;
 327   1              do
 328   1              {
 329   2                      do
 330   2                      {
 331   3                              while (--k);
 332   3                              smgshow();
 333   3                              key_scan();
 334   3                      } while (--j);
 335   2                      smgshow();
 336   2                      key_scan();
 337   2              } while (--i);
 338   1      }
 339          
 340          void measure_dist()
 341          {
 342   1              u16 t;
 343   1              
 344   1              tim1_init();
 345   1              send_wave();
 346   1              TR1 = 1;
 347   1              while((RX == 1) && (TF1 == 0));
 348   1              TR1 = 0;
 349   1              if(TF1 == 0){
 350   2                      t = TH1;
 351   2                      t = (t << 8) | TL1;
 352   2                      dist = t * 0.017;
 353   2              }
 354   1              else if(TF1 == 1){
 355   2                      TF1 = 0;
 356   2                      dist = 999;
 357   2              }
 358   1              Delay60ms();
 359   1      }
 360          
 361          void smgshow_dist()
 362          {
 363   1              u8 distance;
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 16:02:26 PAGE 7   

 364   1              distance = (u8)dist;
 365   1              if(dist > 99)
 366   1                      smgshow_bit(5, ~t_display[distance/ 100]);
 367   1              if(dist > 9)
 368   1                      smgshow_bit(6, ~t_display[distance / 10 % 10]);
 369   1              smgshow_bit(7, ~t_display[distance % 10]);
 370   1      }
 371          
 372          void smgshow()
 373          {
 374   1              if(s7_flag == 1)
 375   1                      smgshow_temp();
 376   1              else if(s7_flag == 0)
 377   1                      smgshow_eeprom();
 378   1              else if(s7_flag == 2)
 379   1                      smgshow_volt();
 380   1              else if(s7_flag == 3)
 381   1      //              smgshow_pulse();
 382   1                      smgshow_dist();
 383   1              else if(s7_flag == 4)
 384   1                      smgshow_time();
 385   1      }
 386          
 387          void sys_init()
 388          {
 389   1              hc138_select(4);
 390   1              P0 = 0xff;
 391   1              hc138_select(5);
 392   1              P0 = 0x00;
 393   1              
 394   1              read_eeprom(0);
 395   1              Delay5ms();
 396   1              eeprom_dat += 1;
 397   1              if(eeprom_dat > 10)
 398   1                      eeprom_dat = 0;
 399   1              write_eeprom(0, eeprom_dat);
 400   1              Delay5ms();
 401   1      }
 402          
 403          void main()
 404          {
 405   1              sys_init();
 406   1      //      tim_init();
 407   1              gettemp_init();
 408   1              write_ds1302();
 409   1              while(1)
 410   1              {
 411   2                      read_ds1302();
 412   2                      pcf8591_adc(3);
 413   2                      measure_dist();
 414   2                      pcf8591_dac(adc_dat);
 415   2                      key_scan();
 416   2                      get_temp();
 417   2                      smgshow();
 418   2              }
 419   1      }
 420          #if 0
              void tim0() interrupt 1
              {
                      NE555_cnt++;
              }
              
C51 COMPILER V9.54   MAIN                                                                  05/13/2022 16:02:26 PAGE 8   

              void tim1() interrupt 3
              {
                      tim1_cnt++;
                      TH1 = (65535 - 50000) / 256;
                      TL1 = (65535 - 50000) % 256;
                      if(tim1_cnt == 20){
                              tim1_cnt = 0;
                              NE555_pulse = NE555_cnt;
                              NE555_cnt = 0;
                      }
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1616    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     41      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

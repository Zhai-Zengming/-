C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MANI
OBJECT MODULE PLACED IN .\Objects\mani.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE mani.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\mani.lst) OBJECT(.\Objects\mani.obj)

line level    source

   1          /*
   2           * @brief : 第八届省赛
   3           *
   4           * @date  : 2022/3/18
   5           */
   6          
   7          
   8          #include <STC15F2K60S2.H>
   9          #include <absacc.h>
  10          #include "onewire.h"
  11          #include "ds1302.h"
  12          
  13          u8 templ, temph;
  14          u16 temp;
  15          u8 ds1302_wraddr[] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a,0x8c};
  16          u8 ds1302_rdaddr[] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b,0x8d};
  17          char ds1302_buff[] = {0x50, 0x59, 0x23, 0x18, 0x03, 0x05,0x22};
  18          char set_time[3] = {0x23, 0x59, 0x55};
  19          static u8 s7_flag = 1, s6_flag = 0, s5_flag = 0, s4_flag = 0;
  20          u8 stop_rdds1302 = 0;
  21          u8 time_same = 0;
  22          u8 key_down = 0;
  23          
  24          u8 code t_display[]={                       //标准字库
  25          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  26              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  27          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  28              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  29              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  30          
  31          void smg_show(void);
  32          
  33                  
  34          void sys_init(void)
  35          {
  36   1              XBYTE[0x8000] = 0xff;
  37   1              XBYTE[0xa000] = 0x00;
  38   1              XBYTE[0xc000] = 0xff;
  39   1              XBYTE[0xe000] = 0xff;
  40   1      }
  41          
  42          void tim0_init(void)
  43          {
  44   1              TMOD = 0x01;
  45   1              TH0 = (65535 - 50000) / 256;
  46   1              TH0 = (65535 - 50000) % 256;
  47   1              ET0 = 1;
  48   1              TR0 = 1;
  49   1              EA = 1;
  50   1      }
  51          
  52          u8 cnt_1s = 0, t0_flag = 0, cnt_200ms = 0, flag_200ms = 0, cnt_5s = 0;
  53          void tim0() interrupt 1
  54          {
C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 2   

  55   1              TH0 = (65535 - 50000) / 256;
  56   1              TH0 = (65535 - 50000) % 256;
  57   1              cnt_1s++;
  58   1              cnt_200ms++;
  59   1              if(cnt_1s == 20)
  60   1              {
  61   2                      if(time_same == 1)
  62   2                              cnt_5s++;
  63   2                      t0_flag++;
  64   2                      if(cnt_5s == 6)
  65   2                      {
  66   3                              cnt_5s = 0;
  67   3                              time_same = 0;
  68   3                              key_down = 0;
  69   3                      }
  70   2              }
  71   1              if(cnt_1s == 40)
  72   1              {
  73   2                      t0_flag = 0;
  74   2                      cnt_1s = 0;
  75   2              }
  76   1              
  77   1              if(cnt_200ms == 4)
  78   1                      flag_200ms++;
  79   1              if(cnt_200ms == 8)
  80   1              {
  81   2                      flag_200ms = 0;
  82   2                      cnt_200ms = 0;
  83   2              }
  84   1      }
  85          
  86          void smg_delay(u8 i)
  87          {
  88   1              while(i--);
  89   1      }
  90          
  91          void delay(u16 t)
  92          {
  93   1              while(t--)
  94   1                      smg_show();
  95   1      }
  96          
  97          void smgshow_bit(u8 pos, u8 dat)
  98          {
  99   1              XBYTE[0xc000] = 1 << pos;
 100   1              XBYTE[0xe000] = dat;
 101   1              smg_delay(500);
 102   1              XBYTE[0xe000] = 0xff;
 103   1      }
 104          
 105          void get_temp(void)
 106          {
 107   1              init_ds18b20();
 108   1              Write_DS18B20(0xcc);
 109   1              Write_DS18B20(0x44);
 110   1              delay(10);
 111   1              init_ds18b20();
 112   1              Write_DS18B20(0xcc);
 113   1              Write_DS18B20(0xbe);
 114   1              templ = Read_DS18B20();
 115   1              temph = Read_DS18B20();
 116   1              
C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 3   

 117   1              temp = (temph << 8) | templ;
 118   1              if((temp & 0xf800) == 0)
 119   1              {
 120   2                      temp = temp >> 4;
 121   2              }
 122   1      }
 123          
 124          void smgshow_temp(void)
 125          {
 126   1              smgshow_bit(5, ~t_display[temp / 10]);
 127   1              smgshow_bit(6, ~t_display[temp % 10]);
 128   1              smgshow_bit(7, ~t_display[12]);
 129   1      }
 130          
 131          void write_ds1302(void)
 132          {
 133   1              int i;
 134   1              Write_Ds1302_Byte(0x8e, 0x00);   //turn off the write protect
 135   1              for(i = 0; i < 7; i++)
 136   1              {
 137   2                      Write_Ds1302_Byte(ds1302_wraddr[i], ds1302_buff[i]);
 138   2              }
 139   1              Write_Ds1302_Byte(0x8e, 0x80);
 140   1      }
 141          
 142          void read_ds1302(void)
 143          {
 144   1              int i;
 145   1              for(i = 0; i < 7; i++)
 146   1              {
 147   2                      ds1302_buff[i] = Read_Ds1302_Byte(ds1302_rdaddr[i]);
 148   2              }
 149   1      }
 150          
 151          char sixteen_ten(char dat)
 152          {
 153   1              if((dat & 0x0f) == 0x0a)
 154   1              {
 155   2                      dat += 6;
 156   2              }
 157   1              if((dat & 0x0f) == 0x0f)
 158   1              {
 159   2                      dat -= 6;
 160   2              }
 161   1              return dat;
 162   1      }
 163          
 164          void smgshow_tim(void)
 165          {
 166   1              if(s7_flag == 2)
 167   1              {
 168   2                      if(t0_flag == 1)
 169   2                      {
 170   3                              smgshow_bit(0, ~t_display[ds1302_buff[2] / 16]);
 171   3                              smgshow_bit(1, ~t_display[ds1302_buff[2] % 16]);
 172   3                      }
 173   2                      if(t0_flag == 0)
 174   2                      {
 175   3                              smgshow_bit(0, 0xff);
 176   3                              smgshow_bit(1, 0xff);
 177   3                      }
 178   2              }
C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 4   

 179   1              else
 180   1              {
 181   2                      smgshow_bit(0, ~t_display[ds1302_buff[2] / 16]);
 182   2                      smgshow_bit(1, ~t_display[ds1302_buff[2] % 16]);
 183   2              }
 184   1              
 185   1              
 186   1              smgshow_bit(2, ~t_display[17]);
 187   1              
 188   1              
 189   1              if(s7_flag == 3)
 190   1              {
 191   2                      if(t0_flag == 1)
 192   2                      {
 193   3                              smgshow_bit(3, ~t_display[ds1302_buff[1] / 16]);
 194   3                              smgshow_bit(4, ~t_display[ds1302_buff[1] % 16]);
 195   3                      }
 196   2                      else
 197   2                      {
 198   3                              smgshow_bit(3, 0xff);
 199   3                              smgshow_bit(4, 0xff);
 200   3                      }
 201   2                      
 202   2              }
 203   1              else
 204   1              {
 205   2                      smgshow_bit(3, ~t_display[ds1302_buff[1] / 16]);
 206   2                      smgshow_bit(4, ~t_display[ds1302_buff[1] % 16]);
 207   2              }
 208   1              
 209   1              
 210   1              smgshow_bit(5, ~t_display[17]);
 211   1      
 212   1              
 213   1              if(s7_flag == 4)
 214   1              {
 215   2                      if(t0_flag == 1)
 216   2                      {
 217   3                              smgshow_bit(6, ~t_display[ds1302_buff[0] / 16]);
 218   3                              smgshow_bit(7, ~t_display[ds1302_buff[0] % 16]);
 219   3                      }
 220   2                      else
 221   2                      {
 222   3                              smgshow_bit(6, 0xff);
 223   3                              smgshow_bit(7, 0xff);
 224   3                      }
 225   2              }
 226   1              else
 227   1              {
 228   2                      smgshow_bit(6, ~t_display[ds1302_buff[0] / 16]);
 229   2                      smgshow_bit(7, ~t_display[ds1302_buff[0] % 16]);
 230   2              }
 231   1      }
 232          
 233          void smgshow_settim(void)
 234          {
 235   1              if(s6_flag == 2)
 236   1              {
 237   2                      if(t0_flag == 1)
 238   2                      {
 239   3                              smgshow_bit(0, ~t_display[set_time[0] / 0x10]);
 240   3                              smgshow_bit(1, ~t_display[set_time[0] % 0x10]);
C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 5   

 241   3                      }
 242   2                      if(t0_flag == 0)
 243   2                      {
 244   3                              smgshow_bit(0, 0xff);
 245   3                              smgshow_bit(1, 0xff);
 246   3                      }
 247   2              }
 248   1              else
 249   1              {
 250   2                      smgshow_bit(0, ~t_display[set_time[0] / 0x10]);
 251   2                      smgshow_bit(1, ~t_display[set_time[0] % 0x10]);
 252   2              }
 253   1              
 254   1              smgshow_bit(2, ~t_display[17]);
 255   1              
 256   1              
 257   1              if(s6_flag == 3)
 258   1              {       
 259   2                      if(t0_flag == 1)
 260   2                      {
 261   3                              smgshow_bit(3, ~t_display[set_time[1] / 0x10]);
 262   3                              smgshow_bit(4, ~t_display[set_time[1] % 0x10]);
 263   3                      }
 264   2                      if(t0_flag == 0)
 265   2                      {
 266   3                              smgshow_bit(3, 0xff);
 267   3                              smgshow_bit(4, 0xff);
 268   3                      }
 269   2              }
 270   1              else
 271   1              {
 272   2                      smgshow_bit(3, ~t_display[set_time[1] / 0x10]);
 273   2                      smgshow_bit(4, ~t_display[set_time[1] % 0x10]);
 274   2              }
 275   1              
 276   1              smgshow_bit(5, ~t_display[17]);
 277   1      
 278   1              
 279   1              if(s6_flag == 4)
 280   1              {
 281   2                      if(t0_flag == 1)
 282   2                      {
 283   3                              smgshow_bit(6, ~t_display[set_time[2] / 0x10]);
 284   3                              smgshow_bit(7, ~t_display[set_time[2] % 0x10]);
 285   3                      }
 286   2                      if(t0_flag == 0)
 287   2                      {
 288   3                              smgshow_bit(6, 0xff);
 289   3                              smgshow_bit(7, 0xff);
 290   3                      }
 291   2              }
 292   1              else
 293   1              {
 294   2                      smgshow_bit(6, ~t_display[set_time[2] / 0x10]);
 295   2                      smgshow_bit(7, ~t_display[set_time[2] % 0x10]);
 296   2              }
 297   1      }
 298          
 299          void smg_show(void)
 300          {
 301   1              if(s7_flag == 1)
 302   1              {
C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 6   

 303   2                      while(P33 == 0)
 304   2                      {
 305   3                              smgshow_temp();
 306   3                      }
 307   2              }
 308   1              if(s7_flag && (s6_flag == 0))   
 309   1                      smgshow_tim();
 310   1              if(s6_flag)
 311   1                      smgshow_settim();
 312   1      }
 313          
 314          void Delay10ms()                //@11.0592MHz
 315          {
 316   1              unsigned char i, j;
 317   1      
 318   1              i = 108;
 319   1              j = 145;
 320   1              do
 321   1              {
 322   2                      while (--j);
 323   2              } while (--i);
 324   1      }
 325          
 326          
 327          void key_scan(void)
 328          {
 329   1              if(P30 == 0)
 330   1              {
 331   2                      Delay10ms();
 332   2                      if(P30 == 0)
 333   2                      {
 334   3                              while(P30 == 0)
 335   3                              {
 336   4                                      smg_show();
 337   4                              }
 338   3                              if(s7_flag == 0)
 339   3                                      stop_rdds1302 = 0;     //由s6切换回来后要正常开始读
 340   3                              
 341   3                              s6_flag = 0;
 342   3                              s7_flag += 1;
 343   3                              if(s7_flag == 2)      //进入闪烁状态
 344   3                              {
 345   4                                      stop_rdds1302 = 1;
 346   4                              }
 347   3                              
 348   3                              if(s7_flag == 5)
 349   3                              {
 350   4                                      stop_rdds1302 = 0;
 351   4                                      s7_flag = 1;
 352   4                                      write_ds1302();
 353   4                              }
 354   3                      }
 355   2              }
 356   1              
 357   1              if(P31 == 0)
 358   1              {
 359   2                      Delay10ms();
 360   2                      if(P31 == 0)
 361   2                      {
 362   3                              while(P31 == 0)
 363   3                              {
 364   4                                      smg_show();
C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 7   

 365   4                              }
 366   3                              s7_flag = 0;
 367   3                              s6_flag++;
 368   3                              if(s6_flag == 5)
 369   3                              {
 370   4                                      s6_flag = 1;
 371   4                              }
 372   3                      }
 373   2              }
 374   1              
 375   1              if(P32 == 0)
 376   1              {
 377   2                      Delay10ms();
 378   2                      if((P32 == 0) && ((s7_flag != 0) || (s6_flag != 0)))
 379   2                      {
 380   3                              while(P32 == 0)
 381   3                              {
 382   4                                      smg_show();
 383   4                              }
 384   3                              if(s7_flag == 2)
 385   3                              {
 386   4                                      ds1302_buff[2]++;
 387   4                                      ds1302_buff[2] = sixteen_ten(ds1302_buff[2]);
 388   4                                      
 389   4                                      if(ds1302_buff[2] > 0x23)
 390   4                                              ds1302_buff[2] = 0;
 391   4                                      
 392   4                              }
 393   3                              else if(s7_flag == 3)
 394   3                              {
 395   4                                      ds1302_buff[1]++;
 396   4                                      ds1302_buff[1] = sixteen_ten(ds1302_buff[1]);
 397   4                                      if(ds1302_buff[1] > 0x59)
 398   4                                              ds1302_buff[1] = 0;
 399   4                              }
 400   3                              else if(s7_flag == 4)
 401   3                              {
 402   4                                      ds1302_buff[0]++;
 403   4                                      ds1302_buff[0] = sixteen_ten(ds1302_buff[0]);
 404   4                                      if(ds1302_buff[0] > 0x59)
 405   4                                              ds1302_buff[0] = 0;
 406   4                              }
 407   3                              
 408   3                              if(s6_flag == 2)
 409   3                              {
 410   4                                      set_time[0]++;
 411   4                                      set_time[0] = sixteen_ten(set_time[0]);
 412   4                                      if(set_time[0] > 0x23)
 413   4                                              set_time[0] = 0;
 414   4                              }
 415   3                              else if(s6_flag == 3)
 416   3                              {
 417   4                                      set_time[1]++;
 418   4                                      set_time[1] = sixteen_ten(set_time[1]);
 419   4                                      if(set_time[1] > 0x59)
 420   4                                              set_time[1] = 0;
 421   4                              }
 422   3                              else if(s6_flag == 4)
 423   3                              {
 424   4                                      set_time[2]++;
 425   4                                      set_time[2] = sixteen_ten(set_time[2]);
 426   4                                      if(set_time[2] > 0x59)
C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 8   

 427   4                                              set_time[2] = 0;
 428   4                              }
 429   3                      }
 430   2              }
 431   1              
 432   1              if(P33 == 0)
 433   1              {
 434   2                      Delay10ms();
 435   2                      if((P33 == 0) && ((s7_flag != 0) || (s6_flag != 0)))
 436   2                      {
 437   3                              while(P33 == 0)
 438   3                              {
 439   4                                      smg_show();
 440   4                              }
 441   3                              if(s7_flag == 2)
 442   3                              {
 443   4                                      ds1302_buff[2]--;
 444   4                                      ds1302_buff[2] = sixteen_ten(ds1302_buff[2]);
 445   4                                      if(ds1302_buff[2] < 0)
 446   4                                              ds1302_buff[2] = 0x23;
 447   4                              }
 448   3                              else if(s7_flag == 3)
 449   3                              {
 450   4                                      ds1302_buff[1]--;
 451   4                                      ds1302_buff[1] = sixteen_ten(ds1302_buff[1]);
 452   4                                      if(ds1302_buff[1] < 0)
 453   4                                              ds1302_buff[1] = 0x59;
 454   4                              }
 455   3                              else if(s7_flag == 4)
 456   3                              {
 457   4                                      ds1302_buff[0]--;
 458   4                                      ds1302_buff[0] = sixteen_ten(ds1302_buff[0]);
 459   4                                      if(ds1302_buff[0] < 0)
 460   4                                              ds1302_buff[0] = 0x59;
 461   4                              }
 462   3                              
 463   3                              if(s6_flag == 2)
 464   3                              {
 465   4                                      set_time[0]--;
 466   4                                      set_time[0] = sixteen_ten(set_time[0]);
 467   4                                      if(set_time[0] < 0)
 468   4                                              set_time[0] = 0x23;
 469   4                              }
 470   3                              else if(s6_flag == 3)
 471   3                              {
 472   4                                      set_time[1]--;
 473   4                                      set_time[1] = sixteen_ten(set_time[1]);
 474   4                                      if(set_time[1] < 0)
 475   4                                              set_time[1] = 0x59;
 476   4                              }
 477   3                              else if(s6_flag == 4)
 478   3                              {
 479   4                                      set_time[2]--;
 480   4                                      set_time[2] = sixteen_ten(set_time[2]);
 481   4                                      if(set_time[2] < 0)
 482   4                                              set_time[2] = 0x59;
 483   4                              }
 484   3                      }
 485   2              }
 486   1      }
 487          
 488          void clock(void)
C51 COMPILER V9.54   MANI                                                                  03/19/2022 13:01:34 PAGE 9   

 489          {
 490   1              if((set_time[2] == ds1302_buff[0]) && (set_time[1] == ds1302_buff[1]) && (set_time[0] == ds1302_buff[2]))
 491   1              {
 492   2                      time_same = 1;
 493   2              }
 494   1              if((time_same == 1) && (key_down == 0))
 495   1              {
 496   2                      if(flag_200ms == 1)
 497   2                      {
 498   3                              XBYTE[0x8000] = 0xff;
 499   3                      }
 500   2                      else
 501   2                              XBYTE[0x8000] = 0xfe;
 502   2                      if((P30 == 0) | (P31 == 0) | (P32 == 0) | (P33 == 0))
 503   2                      {
 504   3                              key_down = 1;
 505   3                              XBYTE[0x8000] = 0xff;
 506   3                      }
 507   2              }
 508   1      }
 509          
 510          void main()
 511          {
 512   1              sys_init();
 513   1              write_ds1302();
 514   1              tim0_init();
 515   1              while(1)
 516   1              {
 517   2                      key_scan();
 518   2                      get_temp();
 519   2                      if(stop_rdds1302 == 0)
 520   2                      {
 521   3                              read_ds1302();
 522   3                      }
 523   2                      
 524   2                      smg_show();
 525   2                      clock();
 526   2              }
 527   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1971    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

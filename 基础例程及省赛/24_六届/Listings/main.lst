C51 COMPILER V9.54   MAIN                                                                  03/23/2022 17:02:55 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @brief : 蓝桥杯省赛第六届
   3           *
   4           * @date  : 2022/3/22
   5           *
   6           */
   7          
   8          #include <STC15F2K60S2.H>
   9          #include "ds1302.h"
  10          #include "onewire.h"
  11          
  12          u8 templ, temph;
  13          u16 temp;
  14          u8 cnt_1s = 0, flag_1s = 0, indiv_cnt = 0, indiv_time = 1, indiv_flag = 0;
  15          u8 s4_flag = 0, s5_flag = 0, s6_flag = 0, s7_flag = 0;
  16          u8 s6_state = 0;
  17          u8 tempera[10] = {0};       //采集到的十个温度
  18          u8 temp_i = 0;
  19          u8 temp_finish = 0;
  20          u8 led_stop = 0;
  21          u8 wr_ds1302addr[] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
  22          u8 rd_ds1302addr[] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
  23          u8 ds1302_buff[] = {0x50, 0x59, 0x23};
  24          
  25          u8 code t_display[]={                       //标准字库
  26          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  27              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  28          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  29              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  30              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  31          
  32          
  33          void smgshow(void);
  34          void read_ds1302();
  35          
  36          void hc138_select(u8 n)
  37          {
  38   1              switch(n)
  39   1              {
  40   2                      case 4:
  41   2                              P2 = (P2 & 0x1f) | 0x80;  break;
  42   2                      case 5:
  43   2                              P2 = (P2 & 0x1f) | 0xa0;  break;
  44   2                      case 6:
  45   2                              P2 = (P2 & 0x1f) | 0xc0;  break;
  46   2                      case 7:
  47   2                              P2 = (P2 & 0x1f) | 0xe0;  break;
  48   2              }
  49   1      }
  50          
  51          void sys_init()
  52          {
  53   1              hc138_select(4);
  54   1              P0 = 0xff;
C51 COMPILER V9.54   MAIN                                                                  03/23/2022 17:02:55 PAGE 2   

  55   1              hc138_select(5);
  56   1              P0 = 0x00;
  57   1      }
  58                  
  59          void delay(u16 dat)
  60          {
  61   1              while(dat--)
  62   1                      smgshow();
  63   1      }
  64          
  65          void smg_delay(u16 t)
  66          {
  67   1              while(t--);
  68   1      }
  69          
  70          void smgshow_bit(u8 pos, u8 dat)
  71          {
  72   1              hc138_select(6);
  73   1              P0 = 1 << pos;
  74   1              hc138_select(7);
  75   1              P0 = dat;
  76   1              smg_delay(500);
  77   1              P0 = 0xff;
  78   1      }
  79          
  80          void smg_setpara()
  81          {
  82   1              smgshow_bit(0, 0xff);
  83   1              smgshow_bit(1, 0xff);
  84   1              smgshow_bit(2, 0xff);
  85   1              smgshow_bit(3, 0xff);
  86   1              smgshow_bit(4, 0xff);
  87   1              
  88   1              smgshow_bit(5, ~t_display[17]);
  89   1              if(s4_flag == 0)
  90   1              {
  91   2                      smgshow_bit(6, ~t_display[0]);
  92   2                      smgshow_bit(7, ~t_display[1]);
  93   2              }
  94   1              else if(s4_flag == 1)
  95   1              {
  96   2                      smgshow_bit(6, ~t_display[0]);
  97   2                      smgshow_bit(7, ~t_display[5]);
  98   2              }
  99   1              else if(s4_flag == 2)
 100   1              {
 101   2                      smgshow_bit(6, ~t_display[3]);
 102   2                      smgshow_bit(7, ~t_display[0]);
 103   2              }
 104   1              else if(s4_flag == 3)
 105   1              {
 106   2                      smgshow_bit(6, ~t_display[6]);
 107   2                      smgshow_bit(7, ~t_display[0]);
 108   2              }
 109   1      }
 110          
 111          void smgshow_time()
 112          {
 113   1              smgshow_bit(0, ~t_display[ds1302_buff[2] / 16]);
 114   1              smgshow_bit(1, ~t_display[ds1302_buff[2] % 16]);
 115   1              
 116   1              if(flag_1s == 0)
C51 COMPILER V9.54   MAIN                                                                  03/23/2022 17:02:55 PAGE 3   

 117   1              {
 118   2                      smgshow_bit(2, 0xff);
 119   2                      smgshow_bit(5, 0xff);
 120   2              }
 121   1              else if(flag_1s == 1)
 122   1              {
 123   2                      smgshow_bit(2, ~t_display[17]);
 124   2                      smgshow_bit(5, ~t_display[17]);
 125   2              }
 126   1              
 127   1              smgshow_bit(3, ~t_display[ds1302_buff[1] / 16]);
 128   1              smgshow_bit(4, ~t_display[ds1302_buff[1] % 16]);
 129   1              
 130   1              smgshow_bit(6, ~t_display[ds1302_buff[0] / 16]);
 131   1              smgshow_bit(7, ~t_display[ds1302_buff[0] % 16]);
 132   1      }
 133          
 134          void smgshow_temp()
 135          {
 136   1              smgshow_bit(0, ~t_display[17]);
 137   1              
 138   1              smgshow_bit(1, ~t_display[0]);
 139   1              smgshow_bit(2, ~t_display[s6_flag]);
 140   1              
 141   1              smgshow_bit(5, ~t_display[17]);
 142   1              
 143   1              smgshow_bit(6, ~t_display[tempera[s6_flag] / 10]);
 144   1              smgshow_bit(7, ~t_display[tempera[s6_flag] % 10]);
 145   1      }
 146          
 147          void smgshow()
 148          {
 149   1              if(((s5_flag == 0) && (s6_state == 0)) || (s7_flag))
 150   1              {
 151   2                      smg_setpara();
 152   2              }
 153   1              
 154   1              if((s5_flag) && (!temp_finish))
 155   1              {
 156   2                      smgshow_time();
 157   2                      
 158   2              }
 159   1              if((temp_finish == 1) && (s7_flag == 0))
 160   1              {
 161   2                      smgshow_temp();
 162   2              }
 163   1      }
 164          
 165          void tim0_init()
 166          {
 167   1              TMOD = 0x01;
 168   1              TH0 = (65535 - 50000) / 256;
 169   1              TL0 = (65535 - 50000) % 256;
 170   1              ET0 = 1;
 171   1              TR0 = 1;
 172   1              EA = 1;
 173   1      }
 174          
 175          void tim0() interrupt 1
 176          {
 177   1              TH0 = (65535 - 50000) / 256;
 178   1              TL0 = (65535 - 50000) % 256;
C51 COMPILER V9.54   MAIN                                                                  03/23/2022 17:02:55 PAGE 4   

 179   1              cnt_1s++;
 180   1              if(cnt_1s == 20)
 181   1              {
 182   2                      cnt_1s = 0;
 183   2                      flag_1s = !flag_1s;
 184   2                      if((temp_finish == 0) && (s5_flag))
 185   2                      {
 186   3                              indiv_cnt++;
 187   3                              if(indiv_cnt == indiv_time)
 188   3                              {
 189   4                                      indiv_cnt = 0;
 190   4                                      indiv_flag = 1;
 191   4                              }
 192   3                      }
 193   2              }
 194   1      }
 195          
 196          void get_temp()
 197          {
 198   1              init_ds18b20();
 199   1              Write_DS18B20(0xcc);
 200   1              Write_DS18B20(0x44);
 201   1              delay(100);
 202   1              init_ds18b20();
 203   1              Write_DS18B20(0xcc);
 204   1              Write_DS18B20(0xbe);
 205   1              
 206   1              templ = Read_DS18B20();
 207   1              temph = Read_DS18B20();
 208   1              
 209   1              temp = temph;
 210   1              temp = (temp << 8) | templ;
 211   1              
 212   1              if((temp & 0xf800) == 0x0000)
 213   1              {
 214   2                      temp = temp >> 4;
 215   2              }
 216   1      }
 217          
 218          void s5_work()
 219          {
 220   1              if(s5_flag)
 221   1              {
 222   2                      if(indiv_flag)
 223   2                      {
 224   3                              indiv_flag = 0;
 225   3                              get_temp();
 226   3                              tempera[temp_i] = temp;
 227   3                              temp_i++;
 228   3                              if(temp_i == 10)
 229   3                              {
 230   4                                      temp_i = 0;
 231   4                                      temp_finish = 1;
 232   4                              }
 233   3                      }
 234   2              }
 235   1      }
 236          
 237          void led_work()
 238          {
 239   1              if(temp_finish && (led_stop == 0))
 240   1              {
C51 COMPILER V9.54   MAIN                                                                  03/23/2022 17:02:55 PAGE 5   

 241   2                      if(flag_1s == 0)
 242   2                      {
 243   3                              hc138_select(4);
 244   3                              P0 = 0xff;
 245   3                      }
 246   2                      else
 247   2                      {
 248   3                              hc138_select(4);
 249   3                              P0 = 0xfe;
 250   3                      }
 251   2              }
 252   1              else if(led_stop)
 253   1              {
 254   2                      hc138_select(4);
 255   2                      P0 = 0xff;
 256   2              }
 257   1      }
 258          
 259          void write_ds1302()
 260          {
 261   1              int i;
 262   1              Write_Ds1302_Byte(0x8e, 0x00);
 263   1              for(i = 0; i < 3; i++)
 264   1              {
 265   2                      Write_Ds1302_Byte(wr_ds1302addr[i], ds1302_buff[i]);
 266   2              }
 267   1              Write_Ds1302_Byte(0x8e, 0x80);
 268   1      }
 269          
 270          void read_ds1302()
 271          {
 272   1              int i;
 273   1              for(i = 0; i < 3; i++)
 274   1              {
 275   2                      ds1302_buff[i] = Read_Ds1302_Byte(rd_ds1302addr[i]);
 276   2              }
 277   1      }
 278          
 279          void Delay10ms()                //@11.0592MHz
 280          {
 281   1              unsigned char i, j;
 282   1      
 283   1              i = 108;
 284   1              j = 145;
 285   1              do
 286   1              {
 287   2                      while (--j);
 288   2              } while (--i);
 289   1      }
 290          
 291          
 292          void key_scan()
 293          {
 294   1              if(P33 == 0)
 295   1              {
 296   2                      Delay10ms();
 297   2                      if(P33 == 0)
 298   2                      {
 299   3                              while(P33 == 0)
 300   3                              {
 301   4                                      smgshow();
 302   4                              }
C51 COMPILER V9.54   MAIN                                                                  03/23/2022 17:02:55 PAGE 6   

 303   3                              s4_flag++;
 304   3                              
 305   3                              if(s4_flag == 1)
 306   3                              {
 307   4                                      indiv_time = 5;
 308   4                              }
 309   3                              else if(s4_flag == 2)
 310   3                              {
 311   4                                      indiv_time = 30;
 312   4                              }
 313   3                              else if(s4_flag == 3)
 314   3                              {
 315   4                                      indiv_time = 60;
 316   4                              }
 317   3                              if(s4_flag == 4)
 318   3                              {
 319   4                                      indiv_time = 1;
 320   4                                      s4_flag = 0;
 321   4                              }
 322   3                      }
 323   2              }
 324   1              
 325   1              if(P32 == 0)
 326   1              {
 327   2                      Delay10ms();
 328   2                      if(P32 == 0)
 329   2                      {
 330   3                              while(P32 == 0)
 331   3                              {
 332   4                                      smgshow();
 333   4                              }
 334   3                              
 335   3                              s5_flag++;              
 336   3                              s4_flag = 0;
 337   3                              
 338   3                              temp_finish = 0;
 339   3                              led_stop = 0;
 340   3                              s7_flag = 0;
 341   3                      }
 342   2              }
 343   1              
 344   1              if((P31 == 0) && (temp_finish == 1))
 345   1              {
 346   2                      Delay10ms();
 347   2                      if(P31 == 0)
 348   2                      {
 349   3                              while(P31 == 0)
 350   3                              {
 351   4                                      smgshow();
 352   4                              }
 353   3                              s6_state = 1;
 354   3                              s6_flag++;
 355   3                              s5_flag = 0;
 356   3                              led_stop = 1;
 357   3                              
 358   3                              if(s6_flag == 10)
 359   3                              {
 360   4                                      s6_flag = 0;
 361   4                              }
 362   3                      }
 363   2              }
 364   1              
C51 COMPILER V9.54   MAIN                                                                  03/23/2022 17:02:55 PAGE 7   

 365   1              if(P30 == 0)
 366   1              {
 367   2                      Delay10ms();
 368   2                      if(P30 == 0)
 369   2                      {
 370   3                              while(P30 == 0)
 371   3                              {
 372   4                                      smgshow();
 373   4                              }
 374   3                              s7_flag++;
 375   3                              s6_flag = 0;
 376   3                              s6_state = 0;
 377   3                      }
 378   2              }
 379   1      }
 380          
 381          void main()
 382          {
 383   1              tim0_init();
 384   1              sys_init();
 385   1              get_temp();
 386   1              write_ds1302();
 387   1              while(1)
 388   1              {
 389   2                      read_ds1302();
 390   2                      key_scan();
 391   2                      s5_work();
 392   2                      led_work();
 393   2                      smgshow();
 394   2              }
 395   1      }
 396          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1032    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

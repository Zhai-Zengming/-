C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @brief : 第九届省赛
   3           *
   4           * @date  : 2022/3/17
   5           */
   6          
   7          #include <reg52.h>
   8          #include "iic.h"
   9          #include <absacc.h>
  10          
  11          u8 mode = 0;
  12          u8 led_state = 0;
  13          u8  ms800_flag = 0;
  14          u16 ms800_cnt = 0;
  15          u8 adc_dat = 0, duty = 0;
  16          u16 mode_delay[4] = {0};
  17          u16 mode_cnt = 0;
  18          u8 mode_flag = 0;
  19          u8 pwm_cnt = 0;
  20          u8 s7_flag = 0, s6_flag = 0;
  21          u8 show_mode = 0;
  22          u8 mode0_finish = 0, mode1_finish = 0, mode2_finish = 0, mode3_finish = 1;
  23          
  24          u8 code smg_display[]={                       //标准字库
  25          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  26              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  27          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  28              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  29              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  30          
  31          void Delay5ms(void);
  32          u8 read_eeprom(u8 pos);
  33          
  34          void sys_init(void)
  35          {
  36   1              u8 i;
  37   1              
  38   1              XBYTE[0x8000] = 0xff;
  39   1              XBYTE[0xa000] = 0x00;
  40   1              XBYTE[0xc000] = 0xff;
  41   1              XBYTE[0xe000] = 0xff;
  42   1              
  43   1              Delay5ms();    //这里不加延时不能正常工作
  44   1              mode_delay[0] = read_eeprom(1) * 10;
  45   1              mode_delay[1] = read_eeprom(2) * 10;
  46   1              mode_delay[2] = read_eeprom(3) * 10;
  47   1              mode_delay[3] = read_eeprom(4) * 10;
  48   1              
  49   1              for(i = 0; i < 4; i++)
  50   1              {
  51   2                      if((mode_delay[i] < 400) || (mode_delay[i] > 1200))
  52   2                      {
  53   3                              mode_delay[i] = 400;
  54   3                      }
C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 2   

  55   2              }
  56   1      }
  57          
  58          void smg_delay(u16 t)
  59          {
  60   1              while(t--);
  61   1      }
  62          
  63          void smgshow_bit(u8 pos, u8 dat)
  64          {
  65   1              XBYTE[0xc000] = 1 << pos;
  66   1              XBYTE[0xe000] = dat;
  67   1              smg_delay(100);
  68   1              XBYTE[0xe000] = 0xff;
  69   1      }
  70          
  71          void pcf8591_adc(void)
  72          {
  73   1              IIC_Start();
  74   1              IIC_SendByte(0x90);
  75   1              IIC_WaitAck();
  76   1              IIC_SendByte(0x43);        //AIN3
  77   1              IIC_WaitAck();
  78   1              
  79   1              IIC_Start();
  80   1              IIC_SendByte(0x91);
  81   1              IIC_WaitAck();
  82   1              adc_dat = IIC_RecByte();
  83   1              IIC_SendAck(0);
  84   1              IIC_Stop();
  85   1              
  86   1              if(adc_dat < 60)
  87   1              {
  88   2                      duty = 25;
  89   2              }
  90   1              else if((adc_dat > 60) && (adc_dat < 120))
  91   1              {
  92   2                      duty = 50;
  93   2              }
  94   1              else if((adc_dat > 120) && (adc_dat < 180))
  95   1              {
  96   2                      duty = 75;
  97   2              }
  98   1              else if(adc_dat > 180)
  99   1              {
 100   2                      duty = 100;
 101   2              }
 102   1      }
 103          
 104          void write_eeprom(u8 pos, u8 dat)
 105          {
 106   1              IIC_Start();
 107   1              IIC_SendByte(0xa0);
 108   1              IIC_WaitAck();
 109   1              IIC_SendByte(pos);
 110   1              IIC_WaitAck();
 111   1              
 112   1              IIC_SendByte(dat);
 113   1              IIC_WaitAck();
 114   1              IIC_Stop();
 115   1      }
 116          
C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 3   

 117          u8 read_eeprom(u8 pos)
 118          {
 119   1              u8 dat;
 120   1              
 121   1              IIC_Start();
 122   1              IIC_SendByte(0xa0);
 123   1              IIC_WaitAck();
 124   1              IIC_SendByte(pos);
 125   1              IIC_WaitAck();
 126   1              
 127   1              IIC_Start();
 128   1              IIC_SendByte(0xa1);
 129   1              IIC_WaitAck();
 130   1              dat = IIC_RecByte();
 131   1              IIC_SendAck(1);
 132   1              IIC_Stop();
 133   1              
 134   1              return dat;
 135   1      }
 136          
 137          void tim_init(void)
 138          {
 139   1              TMOD = 0x01;
 140   1              TH0 = (65535 - 100) / 256;
 141   1              TL0 = (65535 - 100) % 256;
 142   1              ET0 = 1;
 143   1              TR0 = 1;
 144   1              EA = 1;
 145   1      }
 146          
 147          void mode0(void)
 148          {
 149   1              static u8 i = 0;
 150   1              
 151   1              if((mode_flag == 1) && (mode3_finish == 1))
 152   1              {
 153   2                      mode = 0;
 154   2                      mode_flag = 0;
 155   2                      led_state = ~(1 << i);
 156   2                      XBYTE[0x8000] = led_state;
 157   2                      
 158   2                      i++;
 159   2                      if(i == 8)
 160   2                      {
 161   3                              i = 0;
 162   3                              mode3_finish = 0;
 163   3                              mode0_finish = 1;
 164   3                      }
 165   2              }
 166   1      }
 167          
 168          void mode1(void)
 169          {
 170   1              static u8 j = 0;
 171   1              
 172   1              if((mode_flag == 1) && (mode0_finish == 1))
 173   1              {
 174   2                      mode = 1;
 175   2                      mode_flag = 0;
 176   2                      led_state = ~(0x80 >> j);
 177   2                      XBYTE[0x8000] = led_state;
 178   2                      
C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 4   

 179   2                      j++;
 180   2                      if(j == 8)
 181   2                      {
 182   3                              j = 0;
 183   3                              mode0_finish = 0;
 184   3                              mode1_finish = 1;
 185   3                      }
 186   2              }
 187   1      }
 188          
 189          void mode2(void)
 190          {
 191   1              static u8 k = 0;
 192   1              
 193   1              if((mode_flag == 1) && (mode1_finish == 1))
 194   1              {
 195   2                      mode = 2;
 196   2                      mode_flag = 0;
 197   2                      led_state = (~(0x80 >> k)) & (~(1 << k));
 198   2                      XBYTE[0x8000] = led_state;
 199   2                      
 200   2                      k++;
 201   2                      if(k == 4)
 202   2                      {
 203   3                              k = 0;
 204   3                              mode1_finish = 0;
 205   3                              mode2_finish = 1;
 206   3                      }
 207   2              }
 208   1      }
 209          
 210          void mode3(void)
 211          {
 212   1              static u8 l = 0;
 213   1              
 214   1              if((mode_flag == 1) && (mode2_finish == 1))
 215   1              {
 216   2                      mode = 3;
 217   2                      mode_flag = 0;
 218   2                      led_state = (~(0x08 >> l)) & (~(0x10 << l));
 219   2                      XBYTE[0x8000] = led_state;
 220   2                      
 221   2                      l++;
 222   2                      if(l == 4)
 223   2                      {
 224   3                              l = 0;
 225   3                              mode2_finish = 0;
 226   3                              mode3_finish = 1;
 227   3                      }
 228   2              }
 229   1      }
 230          
 231          void led_work(void)
 232          {
 233   1              if(s7_flag)
 234   1              {
 235   2                      mode0();
 236   2                      mode1();
 237   2                      mode2();
 238   2                      mode3();
 239   2              }
 240   1              else
C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 5   

 241   1              {
 242   2                      XBYTE[0x8000] = 0xff;
 243   2              }
 244   1      }
 245          
 246          void smg_lightgrade(void)
 247          {
 248   1              smgshow_bit(6, ~smg_display[17]);
 249   1              smgshow_bit(7, ~smg_display[duty / 25]);   // 25/25=1 75/25=2 50/25=2 100/25=4 
 250   1      }
 251          
 252          void smg_mode(void)
 253          {
 254   1              if(s6_flag == 0)
 255   1              {
 256   2                      XBYTE[0xc000] = 0xff;
 257   2                      XBYTE[0xe000] = 0xff;
 258   2              }
 259   1              else if(s6_flag == 1)
 260   1              {
 261   2                      if(ms800_flag == 1)
 262   2                      {
 263   3                              smgshow_bit(0, ~smg_display[17]);
 264   3                              smgshow_bit(1, ~smg_display[show_mode + 1]);
 265   3                              smgshow_bit(2, ~smg_display[17]);
 266   3                      }
 267   2                      else
 268   2                      {
 269   3                              smgshow_bit(0, 0xff);
 270   3                              smgshow_bit(1, 0xff);
 271   3                              smgshow_bit(2, 0xff);
 272   3                      }
 273   2                      smgshow_bit(4, ~smg_display[mode_delay[show_mode] / 1000]);
 274   2                      smgshow_bit(5, ~smg_display[mode_delay[show_mode] / 100 % 10]);
 275   2                      smgshow_bit(6, ~smg_display[mode_delay[show_mode] / 10 % 10]);
 276   2                      smgshow_bit(7, ~smg_display[mode_delay[show_mode] % 10]);
 277   2                      
 278   2              }
 279   1              else if(s6_flag == 2)
 280   1              {
 281   2                      smgshow_bit(0, ~smg_display[17]);
 282   2                      smgshow_bit(1, ~smg_display[show_mode + 1]);
 283   2                      smgshow_bit(2, ~smg_display[17]);
 284   2              
 285   2                      if(ms800_flag == 1)
 286   2                      {
 287   3                              smgshow_bit(4, ~smg_display[mode_delay[show_mode] / 1000]);
 288   3                              smgshow_bit(5, ~smg_display[mode_delay[show_mode] / 100 % 10]);
 289   3                              smgshow_bit(6, ~smg_display[mode_delay[show_mode] / 10 % 10]);
 290   3                              smgshow_bit(7, ~smg_display[mode_delay[show_mode] % 10]);
 291   3                      }
 292   2                      else
 293   2                      {
 294   3                              smgshow_bit(4, 0xff);
 295   3                              smgshow_bit(5, 0xff);
 296   3                              smgshow_bit(6, 0xff);
 297   3                              smgshow_bit(7, 0xff);
 298   3                      }
 299   2              }
 300   1      }
 301          
 302          void Delay10ms()                //@11.0592MHz
C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 6   

 303          {
 304   1              unsigned char i, j;
 305   1      
 306   1              i = 108;
 307   1              j = 145;
 308   1              do
 309   1              {
 310   2                      while (--j);
 311   2              } while (--i);
 312   1      }
 313          
 314          void Delay5ms()         //@11.0592MHz
 315          {
 316   1              unsigned char i, j;
 317   1      
 318   1              i = 54;
 319   1              j = 199;
 320   1              do
 321   1              {
 322   2                      while (--j);
 323   2              } while (--i);
 324   1      }
 325          
 326          void key_scan(void)
 327          {
 328   1              if(P30 == 0)
 329   1              {
 330   2                      Delay10ms();
 331   2                      if(P30 == 0)
 332   2                      {
 333   3                              while(P30 == 0)
 334   3                              {
 335   4                                      led_work();
 336   4                                      smg_mode();
 337   4                              }
 338   3                              s7_flag = !s7_flag;
 339   3                      }
 340   2              }
 341   1              
 342   1              if(P31 == 0)
 343   1              {
 344   2                      Delay10ms();
 345   2                      if(P31 == 0)
 346   2                      {
 347   3                              while(P31 == 0)
 348   3                              {
 349   4                                      smg_mode();
 350   4                                      led_work();
 351   4                              }
 352   3                              s6_flag++;
 353   3                              if(s6_flag == 3)
 354   3                              {
 355   4                                      s6_flag = 0;
 356   4                              }
 357   3                      }
 358   2              }
 359   1              
 360   1              if((P32 == 0) && (s6_flag))
 361   1              {
 362   2                      Delay10ms();
 363   2                      if(P32 == 0)
 364   2                      {
C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 7   

 365   3                              while(P32 == 0)
 366   3                              {
 367   4                                      smg_mode();
 368   4                                      led_work();
 369   4                              }
 370   3                              if(s6_flag == 1)
 371   3                              {
 372   4                                      if(show_mode < 3)
 373   4                                      {
 374   5                                              show_mode++;
 375   5                                      }
 376   4                                      
 377   4                              }
 378   3                              else if(s6_flag == 2)
 379   3                              {
 380   4                                      if(mode_delay[show_mode] < 1200)
 381   4                                      {
 382   5                                              mode_delay[show_mode] += 100;
 383   5                                              write_eeprom(show_mode + 1, mode_delay[show_mode] / 10);
 384   5                                              Delay5ms();   //等待写入完成
 385   5                                      }
 386   4                              }
 387   3                      }
 388   2              }
 389   1              
 390   1              if(P33 == 0)
 391   1              {
 392   2                      Delay10ms();
 393   2                      if(P33 == 0)
 394   2                      {
 395   3                              while(P33 == 0)
 396   3                              {
 397   4                                      if(s6_flag == 0)
 398   4                                              smg_lightgrade();
 399   4                                      else
 400   4                                              smg_mode();
 401   4                                      led_work();
 402   4                              }
 403   3                              if(s6_flag == 1)
 404   3                              {
 405   4                                      if(show_mode)
 406   4                                      {
 407   5                                              show_mode--;
 408   5                                      }
 409   4                              }
 410   3                              else if(s6_flag == 2)
 411   3                              {
 412   4                                      if(mode_delay[show_mode] > 400)
 413   4                                      {
 414   5                                              mode_delay[show_mode] -= 100;
 415   5                                              write_eeprom(show_mode + 1, mode_delay[show_mode] / 10);
 416   5                                              Delay5ms();   //等待写入完成
 417   5                                      }
 418   4                              }
 419   3                      }
 420   2              }
 421   1      }
 422          
 423          void main()
 424          {
 425   1              sys_init();
 426   1              tim_init();
C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 8   

 427   1              while(1)
 428   1              {
 429   2                      led_work();
 430   2                      smg_mode();
 431   2                      key_scan();
 432   2                      pcf8591_adc();
 433   2              }
 434   1      }
 435          
 436          void tim0() interrupt 1
 437          {
 438   1              TH0 = (65535 - 100) / 256;
 439   1              TL0 = (65535 - 100) % 256;
 440   1              
 441   1              mode_cnt++;
 442   1              if(mode_cnt == (mode_delay[mode] * 10))
 443   1              {
 444   2                      mode_cnt = 0;
 445   2                      mode_flag = 1;
 446   2              }
 447   1              
 448   1              pwm_cnt++;
 449   1              if(pwm_cnt == 100)
 450   1              {
 451   2                      pwm_cnt = 0;
 452   2              }
 453   1              
 454   1              if(s7_flag)
 455   1              {
 456   2                      if(pwm_cnt < duty)
 457   2                      {
 458   3                              XBYTE[0x8000] = led_state;
 459   3                      }
 460   2                      else if(pwm_cnt > duty)
 461   2                      {
 462   3                              XBYTE[0x8000] = 0xff;
 463   3                      }
 464   2              }
 465   1              
 466   1              ms800_cnt++;
 467   1              if(ms800_cnt == 8000)
 468   1              {
 469   2                      ms800_cnt = 0;
 470   2                      ms800_flag = !ms800_flag;
 471   2                      
 472   2              }
 473   1      }
 474          
 475          
 476          
 477          
 478          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1476    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  03/26/2022 19:22:49 PAGE 9   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.54   MAIN                                                                  03/20/2022 19:13:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @brief : 第七届省赛
   3           *
   4           * @date  : 2022/3/20
   5           *
   6           */
   7          
   8          
   9          #include <STC15F2K60S2.H>
  10          #include <absacc.h>
  11          #include <onewire.h>
  12          
  13          u8 temph, templ;
  14          u16 temp;
  15          u8 pwm_cnt = 0;
  16          u16 cnt_1s = 0;
  17          u8 duty = 2;
  18          int set_time[3] = {50, 50, 50};
  19          u8 s4_flag = 0, s5_flag = 0, s7_flag = 0;
  20          
  21          u8 code t_display[]={                       //标准字库
  22          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  23              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  24          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  25              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  26              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  27          
  28          void smgshow(void);
  29          
  30                  
  31          void sys_init(void)
  32          {
  33   1              XBYTE[0x8000] = 0xff;
  34   1              XBYTE[0xa000] = 0x00;
  35   1              XBYTE[0xc000] = 0xff;
  36   1              XBYTE[0xe000] = 0xff;
  37   1      }
  38          
  39          void delay(u16 dat)
  40          {
  41   1              while(dat--)
  42   1              {
  43   2                      smgshow();
  44   2              }
  45   1      }
  46          
  47          void smg_delay(u16 dat)
  48          {
  49   1              while(dat--);
  50   1      }
  51          void smgshow_bit(u8 pos, u8 dat)
  52          {
  53   1              XBYTE[0xc000] = 1 << pos;
  54   1              XBYTE[0xe000] = dat;
C51 COMPILER V9.54   MAIN                                                                  03/20/2022 19:13:48 PAGE 2   

  55   1              smg_delay(100);
  56   1              XBYTE[0xe000] = 0xff;
  57   1      }
  58          
  59          void get_temp(void)
  60          {
  61   1              init_ds18b20();
  62   1              Write_DS18B20(0xcc);
  63   1              Write_DS18B20(0x44);
  64   1              delay(5);
  65   1              init_ds18b20();
  66   1              Write_DS18B20(0xcc);
  67   1              Write_DS18B20(0xbe);
  68   1              
  69   1              templ = Read_DS18B20();
  70   1              temph = Read_DS18B20();
  71   1              temp = temph;
  72   1              temp = (temp << 8) | templ;
  73   1              if((temp & 0xf800) == 0x0000)
  74   1              {
  75   2                      temp = temp >> 4;
  76   2              }
  77   1      }
  78          
  79          void smgshow_temp(void)
  80          {
  81   1              smgshow_bit(0, ~t_display[17]);
  82   1              smgshow_bit(1, ~t_display[4]);
  83   1              smgshow_bit(2, ~t_display[17]);
  84   1              
  85   1              smgshow_bit(5, ~t_display[temp / 10]);
  86   1              smgshow_bit(6, ~t_display[temp % 10]);
  87   1              smgshow_bit(7, ~t_display[12]);
  88   1      }
  89          
  90          void tim0_init(void)
  91          {
  92   1              TMOD = 0x01;
  93   1              TH0 = (65535 - 100) / 256;
  94   1              TL0 = (65535 - 100) % 256;
  95   1              ET0 = 1;
  96   1              TR0 = 1;
  97   1              EA = 1;
  98   1      }
  99          
 100          void tim0() interrupt 1
 101          {
 102   1              TH0 = (65535 - 100) / 256;
 103   1              TL0 = (65535 - 100) % 256;
 104   1              pwm_cnt++;
 105   1              cnt_1s++;
 106   1              if(cnt_1s == 10000)
 107   1              {
 108   2                      cnt_1s = 0;
 109   2                      if(set_time[s4_flag] > 0)
 110   2                      {
 111   3                              set_time[s4_flag]--;
 112   3                              if(set_time[s4_flag] == 0)
 113   3                              {
 114   4                                      duty = 0;
 115   4                              }
 116   3                      }
C51 COMPILER V9.54   MAIN                                                                  03/20/2022 19:13:48 PAGE 3   

 117   2              }
 118   1              if(pwm_cnt == 10)
 119   1                      pwm_cnt = 0;
 120   1              if(pwm_cnt < duty)
 121   1              {
 122   2                      XBYTE[0xa000] = 0x40;   //用蜂鸣器代替pwm驱动电机
 123   2      //              P34 = 1;
 124   2              }
 125   1              if(pwm_cnt > duty)
 126   1              {
 127   2      //              P34 = 0;
 128   2                      XBYTE[0xa000] = 0x00;
 129   2              }
 130   1      }
 131          
 132          void smg_workmode(void)
 133          {
 134   1              if(s4_flag == 0)
 135   1              {
 136   2                      smgshow_bit(0, ~t_display[17]);             //模式1
 137   2                      smgshow_bit(1, ~t_display[1]);
 138   2                      smgshow_bit(2, ~t_display[17]);
 139   2                      smgshow_bit(4, ~t_display[set_time[0] / 1000]);
 140   2                      smgshow_bit(5, ~t_display[set_time[0] / 100 % 10]);
 141   2                      smgshow_bit(6, ~t_display[set_time[0] / 10 % 10]);
 142   2                      smgshow_bit(7, ~t_display[set_time[0] % 10]);
 143   2              }
 144   1              
 145   1              if(s4_flag == 1)
 146   1              {
 147   2                      smgshow_bit(0, ~t_display[17]);             //模式2
 148   2                      smgshow_bit(1, ~t_display[2]);
 149   2                      smgshow_bit(2, ~t_display[17]);
 150   2                      smgshow_bit(4, ~t_display[set_time[1] / 1000]);
 151   2                      smgshow_bit(5, ~t_display[set_time[1] / 100 % 10]);
 152   2                      smgshow_bit(6, ~t_display[set_time[1] / 10 % 10]);
 153   2                      smgshow_bit(7, ~t_display[set_time[1] % 10]);
 154   2              }
 155   1              
 156   1              if(s4_flag == 2)
 157   1              {
 158   2                      smgshow_bit(0, ~t_display[17]);             //模式3
 159   2                      smgshow_bit(1, ~t_display[3]);
 160   2                      smgshow_bit(2, ~t_display[17]);
 161   2                      smgshow_bit(4, ~t_display[set_time[2] / 1000]);
 162   2                      smgshow_bit(5, ~t_display[set_time[2] / 100 % 10]);
 163   2                      smgshow_bit(6, ~t_display[set_time[2] / 10 % 10]);
 164   2                      smgshow_bit(7, ~t_display[set_time[2] % 10]);
 165   2              }
 166   1      }
 167          
 168          void smgshow(void)
 169          {
 170   1              if(s7_flag == 1)
 171   1              {
 172   2                      smgshow_temp();
 173   2              }
 174   1              if(s7_flag == 0)
 175   1              {
 176   2                      smg_workmode();
 177   2              }
 178   1      }
C51 COMPILER V9.54   MAIN                                                                  03/20/2022 19:13:48 PAGE 4   

 179          
 180          void Delay10ms()                //@11.0592MHz
 181          {
 182   1              unsigned char i, j;
 183   1      
 184   1              i = 108;
 185   1              j = 145;
 186   1              do
 187   1              {
 188   2                      while (--j);
 189   2              } while (--i);
 190   1      }
 191          
 192          void key_scan(void)
 193          {
 194   1              if(P33 == 0)
 195   1              {
 196   2                      Delay10ms();
 197   2                      if(P33 == 0)
 198   2                      {
 199   3                              while(P33 == 0)
 200   3                              {
 201   4                                      smgshow();
 202   4                              }
 203   3                              s4_flag++;
 204   3                              if(s4_flag == 1)
 205   3                              {
 206   4                                      duty = 3;
 207   4                                      
 208   4                              }
 209   3                              else if(s4_flag == 2)
 210   3                              {
 211   4                                      duty = 7;
 212   4                                      
 213   4                              }
 214   3                              else if(s4_flag == 3)
 215   3                              {
 216   4                                      s4_flag = 0;
 217   4                                      
 218   4                              }
 219   3                              
 220   3                      }
 221   2              }
 222   1              
 223   1              if(P32 == 0)
 224   1              {
 225   2                      Delay10ms();
 226   2                      if(P32 == 0)
 227   2                      {
 228   3                              while(P32 == 0)
 229   3                              {
 230   4                                      smgshow();
 231   4                              }
 232   3                              s5_flag++;
 233   3                              if(s5_flag == 1)
 234   3                                      set_time[s4_flag] += 60;
 235   3                              if(s5_flag == 2)
 236   3                                      set_time[s4_flag] += 60;
 237   3                              if(s5_flag == 3)
 238   3                              {
 239   4                                      s5_flag = 0;
 240   4                                      set_time[s4_flag] -= 120;
C51 COMPILER V9.54   MAIN                                                                  03/20/2022 19:13:48 PAGE 5   

 241   4                                      if(set_time[s4_flag] < 0)
 242   4                                              set_time[s4_flag] = 0;
 243   4                              }
 244   3                              
 245   3                              if(duty == 0)    //占空比清零后重新设置
 246   3                              {
 247   4                                      if(s4_flag == 1)
 248   4                                              duty = 3;
 249   4                                      if(s4_flag == 2)
 250   4                                              duty = 7;
 251   4                                      if(s4_flag == 3)
 252   4                                              s4_flag = 0;
 253   4                              }
 254   3                      }
 255   2              }
 256   1              
 257   1              if(P31 == 0)
 258   1              {
 259   2                      Delay10ms();
 260   2                      if(P31 == 0)
 261   2                      {
 262   3                              while(P31 == 0)
 263   3                              {
 264   4                                      smgshow();
 265   4                              }
 266   3                              duty = 0;
 267   3                              set_time[s4_flag] = 0;
 268   3                      }
 269   2              }
 270   1              
 271   1              if(P30 == 0)
 272   1              {
 273   2                      Delay10ms();
 274   2                      if(P30 == 0)
 275   2                      {
 276   3                              while(P30 == 0)
 277   3                              {
 278   4                                      smgshow();
 279   4                              }
 280   3                              s7_flag = !s7_flag;
 281   3                      }
 282   2              }
 283   1      }
 284          
 285          void led_work(void)
 286          {
 287   1              if((P31 != 0) && (set_time[s4_flag] > 0))
 288   1              {
 289   2                      if(s4_flag == 0)
 290   2                      {
 291   3                              XBYTE[0x8000] = 0xfe;
 292   3                      }
 293   2                      else if(s4_flag == 1)
 294   2                      {
 295   3                              XBYTE[0x8000] = 0xfd;
 296   3                      }
 297   2                      else if(s4_flag == 2)
 298   2                      {
 299   3                              XBYTE[0x8000] = 0xfb;
 300   3                      }
 301   2              }
 302   1              else
C51 COMPILER V9.54   MAIN                                                                  03/20/2022 19:13:48 PAGE 6   

 303   1                      XBYTE[0x8000] = 0xff;
 304   1      }
 305          
 306          void main()
 307          {
 308   1              sys_init();
 309   1              tim0_init();
 310   1              XBYTE[0x8000] = 0xfe;
 311   1              while(1)
 312   1              {
 313   2                      get_temp();
 314   2                      key_scan();
 315   2                      smgshow();
 316   2                      led_work();
 317   2              }
 318   1      }
 319          
 320          
 321          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1264    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

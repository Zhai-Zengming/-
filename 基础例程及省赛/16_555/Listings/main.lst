C51 COMPILER V9.54   MAIN                                                                  03/14/2022 11:11:38 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @brief : 测量555产生的频率显示在数码管上
   3           *
   4           * @date  : 2022/3/14
   5           *
   6           */
   7          
   8          
   9          #include <STC15F2K60S2.H>
  10          #include <absacc.h>
  11          
  12          u16 pulse = 0;
  13          u16 pulse_cnt = 0;
  14          u8 tim1_cnt = 0;
  15          
  16          u8 code smg_display[]={         //标准字库
  17          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  18              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  19          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  20              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  21              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  22          
  23          void system_init(void)
  24          {
  25   1              XBYTE[0x8000] = 0xff;
  26   1              XBYTE[0xa000] = 0x00;
  27   1      }
  28          
  29          void smg_delay(void)
  30          {
  31   1              u8 i = 100;
  32   1              while(i--);
  33   1      }
  34          
  35          void smgshow_bit(u8 pos, u8 dat)
  36          {
  37   1              XBYTE[0xc000] = 1 << pos;
  38   1              XBYTE[0xe000] = dat;
  39   1              smg_delay();
  40   1              XBYTE[0xe000] = 0xff;
  41   1      }
  42          
  43          void tim_init(void)
  44          {
  45   1              TMOD = 0x16;                     //tim0八位自动重装，tim1十六位不可重装
  46   1              TH1 = (65535 - 50000) / 256;
  47   1              TL1 = (65535 - 50000) % 256;
  48   1              TH0 = 0xff;
  49   1              TL0 = 0xff;
  50   1              
  51   1              ET1 = 1;
  52   1              ET0 = 1;
  53   1              TR1 = 1;
  54   1              TR0 = 1;
C51 COMPILER V9.54   MAIN                                                                  03/14/2022 11:11:38 PAGE 2   

  55   1              EA = 1;
  56   1      }
  57          
  58          void smgshow_pulse(void)
  59          {
  60   1              smgshow_bit(0, ~smg_display[15]);      //F
  61   1              smgshow_bit(1, 0xff);
  62   1              smgshow_bit(2, 0xff);
  63   1              
  64   1              if(pulse > 9999)     //五位数
  65   1              {
  66   2                      smgshow_bit(3, ~smg_display[pulse / 10000]);
  67   2      //              smgshow_bit(4, ~smg_display[pulse / 1000 % 10]);
  68   2      //              smgshow_bit(5, ~smg_display[pulse / 100 % 10]);
  69   2      //              smgshow_bit(6, ~smg_display[pulse / 10 % 10]);
  70   2      //              smgshow_bit(7, ~smg_display[pulse % 10]);
  71   2              }
  72   1              if(pulse > 999)     //四位数
  73   1              {
  74   2      //              smgshow_bit(3, 0xff);
  75   2                      smgshow_bit(4, ~smg_display[pulse / 1000 % 10]);
  76   2      //              smgshow_bit(5, ~smg_display[pulse / 100 % 10]);
  77   2      //              smgshow_bit(6, ~smg_display[pulse / 10 % 10]);
  78   2      //              smgshow_bit(7, ~smg_display[pulse % 10]);
  79   2              }
  80   1              if(pulse > 99)     //三位数
  81   1              {
  82   2      //              smgshow_bit(3, 0xff);
  83   2      //              smgshow_bit(4, 0xff);
  84   2                      smgshow_bit(5, ~smg_display[pulse / 100 % 10]);
  85   2      //              smgshow_bit(6, ~smg_display[pulse / 10 % 10]);
  86   2      //              smgshow_bit(7, ~smg_display[pulse % 10]);
  87   2              }
  88   1              if(pulse > 9)     //二位数
  89   1              {
  90   2      //              smgshow_bit(3, 0xff);
  91   2      //              smgshow_bit(4, 0xff);
  92   2      //              smgshow_bit(5, 0xff);
  93   2                      smgshow_bit(6, ~smg_display[pulse / 10 % 10]);
  94   2      //              smgshow_bit(7, ~smg_display[pulse % 10]);
  95   2              }
  96   1              smgshow_bit(7, ~smg_display[pulse % 10]);
  97   1      }
  98          
  99          void main()
 100          {
 101   1              system_init();
 102   1              tim_init();
 103   1              
 104   1              while(1)
 105   1              {
 106   2                      smgshow_pulse();
 107   2              }
 108   1      }
 109          
 110          
 111          
 112          void tim0() interrupt 1
 113          {
 114   1              pulse_cnt++;
 115   1      }
 116          
C51 COMPILER V9.54   MAIN                                                                  03/14/2022 11:11:38 PAGE 3   

 117          void tim1() interrupt 3
 118          {
 119   1              tim1_cnt++;
 120   1              TH1 = (65535 - 50000) / 256;
 121   1              TL1 = (65535 - 50000) % 256;
 122   1              if(tim1_cnt == 20)    //定时1S时间到
 123   1              {
 124   2                      tim1_cnt = 0;
 125   2                      pulse = pulse_cnt;
 126   2                      pulse_cnt = 0;
 127   2              }
 128   1      }
 129          
 130          
 131          
 132          
 133          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

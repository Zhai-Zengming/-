C51 COMPILER V9.54   MAIN                                                                  06/10/2022 12:33:46 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @brief: 第十一届国赛
   3           *
   4           * @data: 2022/6/10
   5           */
   6           
   7          #include <STC15F2K60S2.H>
   8          #include "onewire.h"
   9          #include "ds1302.h"  
  10          #include "iic.h"
  11          
  12          typedef unsigned char u8;
  13          typedef unsigned int u16;
  14          
  15          u8 templ, temph;
  16          u16 temp;
  17          u16 volt;
  18          char settime = 17;  char real_settime = 17;     //real为退出参数界面有效
  19          u8 settemp = 25;    u8 real_settemp = 25;
  20          u8 setled = 4;      u8 real_setled = 4;
  21          u8 s4_flag = 0;
  22          u8 s5_flag = 0;
  23          u8 volt_flag = 0;
  24          u8 pre_voltflag = 0;
  25          u8 t0_cnt = 0;
  26          u8 L3_flag = 0;
  27          
  28          u8 code t_display[]={                       //标准字库
  29          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  30              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  31          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  32              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e};
  33          u8 code dot_display[]={0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 
             -7. 8. 9. -1
  34          
  35          u8 wrds1302_addr[] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
  36          u8 rdds1302_addr[] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
  37          u8 ds1302_buff[] = {0x50, 0x59, 0x16, 0x10, 0x06, 0x01, 0x22};
  38          
  39          void smgshow();
  40          
  41          void hc138_select(u8 n)
  42          {
  43   1              switch(n)
  44   1              {
  45   2                      case 4:
  46   2                              P2 = P2 & 0x1f | 0x80;  break;
  47   2                      case 5:
  48   2                              P2 = P2 & 0x1f | 0xa0;  break;
  49   2                      case 6:
  50   2                              P2 = P2 & 0x1f | 0xc0;  break;
  51   2                      case 7:
  52   2                              P2 = P2 & 0x1f | 0xe0;  break;
  53   2              }
C51 COMPILER V9.54   MAIN                                                                  06/10/2022 12:33:46 PAGE 2   

  54   1      }
  55          
  56          void smg_delay()
  57          {
  58   1              u8 t = 100;
  59   1              while(t--);
  60   1      }
  61          
  62          void smgshow_bit(u8 pos, u8 dat)
  63          {
  64   1              hc138_select(6);
  65   1              P0 = 1 << pos;
  66   1              hc138_select(7);
  67   1              P0 = dat;
  68   1              smg_delay();
  69   1              P0 = 0xff;
  70   1      }
  71          
  72          void delay(u8 t)
  73          {
  74   1              while(t--)
  75   1                      smgshow();
  76   1      }
  77          
  78          void get_temp()
  79          {
  80   1              init_ds18b20();
  81   1              Write_DS18B20(0xcc);
  82   1              Write_DS18B20(0x44);
  83   1              delay(20);
  84   1              init_ds18b20();
  85   1              Write_DS18B20(0xcc);
  86   1              Write_DS18B20(0xbe);
  87   1              
  88   1              templ = Read_DS18B20();
  89   1              temph = Read_DS18B20();
  90   1              temp = temph;
  91   1              temp = (temp << 8) | templ;
  92   1              if((temp & 0xf800) == 0x0000){
  93   2                      temp = (temp >> 4) * 10 + (temp & 0x0f) * 0.625;
  94   2              }
  95   1      }
  96          
  97          void smgshow_temp()
  98          {
  99   1              smgshow_bit(0, ~t_display[12]);
 100   1              smgshow_bit(5, ~t_display[temp / 100]);
 101   1              smgshow_bit(6, ~dot_display[temp / 10 % 10]);
 102   1              smgshow_bit(7, ~t_display[temp % 10]);
 103   1      }
 104          
 105          void smgshow_settemp()
 106          {
 107   1              smgshow_bit(0, ~t_display[24]);
 108   1              smgshow_bit(1, ~t_display[2]);
 109   1              smgshow_bit(6, ~t_display[settemp / 10]);
 110   1              smgshow_bit(7, ~t_display[settemp % 10]);
 111   1      }
 112          
 113          void pcf8591_adc(u8 channel)
 114          {
 115   1              u16 dat;
C51 COMPILER V9.54   MAIN                                                                  06/10/2022 12:33:46 PAGE 3   

 116   1              IIC_Start();
 117   1              IIC_SendByte(0x90);
 118   1              IIC_WaitAck();
 119   1              IIC_SendByte(channel);
 120   1              IIC_WaitAck();
 121   1              
 122   1              IIC_Start();
 123   1              IIC_SendByte(0x91);
 124   1              IIC_WaitAck();
 125   1              dat = IIC_RecByte();
 126   1              IIC_SendAck(1);
 127   1              IIC_Stop();
 128   1              
 129   1              volt = dat * 1.96;
 130   1      }
 131          
 132          void smgshow_volt()
 133          {
 134   1              smgshow_bit(0, ~t_display[14]);
 135   1              smgshow_bit(2, ~dot_display[volt / 100]);
 136   1              smgshow_bit(3, ~t_display[volt / 10 % 10]);
 137   1              smgshow_bit(4, ~t_display[volt % 10]);
 138   1              if(volt > 230){
 139   2                      smgshow_bit(7, ~t_display[0]);
 140   2              }
 141   1              else{
 142   2                      smgshow_bit(7, ~t_display[1]);
 143   2              }
 144   1      }
 145          
 146          void tim0_init()
 147          {
 148   1              TMOD = 0x01;
 149   1              TH0 = (65535 - 50000) / 256;
 150   1              TL0 = (65535 - 50000) % 256;
 151   1              ET0 = 1;
 152   1              TR0 = 1;
 153   1              EA = 1;
 154   1      }
 155          
 156          void tim0() interrupt 1
 157          {
 158   1              TH0 = (65535 - 50000) / 256;
 159   1              TL0 = (65535 - 50000) % 256;
 160   1              t0_cnt++;
 161   1              if(t0_cnt > 60)
 162   1              {
 163   2                      t0_cnt = 0;
 164   2                      if(volt_flag == 1){
 165   3                              L3_flag = 1;
 166   3                      }else{
 167   3                              L3_flag = 0;
 168   3                      }
 169   2              }
 170   1      }
 171          
 172          void wr_ds1302()
 173          {
 174   1              u8 i;
 175   1              Write_Ds1302_Byte(0x8e, 0x00);
 176   1              for(i = 0; i < 7; i++){
 177   2                      Write_Ds1302_Byte(wrds1302_addr[i], ds1302_buff[i]);
C51 COMPILER V9.54   MAIN                                                                  06/10/2022 12:33:46 PAGE 4   

 178   2              }
 179   1              Write_Ds1302_Byte(0x8e, 0x80);
 180   1      }
 181          
 182          void rd_ds1302()
 183          {
 184   1              u8 i;
 185   1              for(i = 0; i < 7; i++){
 186   2                      ds1302_buff[i] = Read_Ds1302_Byte(rdds1302_addr[i]);
 187   2              }
 188   1      }
 189          
 190          void smgshow_ds1302()
 191          {
 192   1              smgshow_bit(0, ~t_display[ds1302_buff[2] / 16]);
 193   1              smgshow_bit(1, ~t_display[ds1302_buff[2] % 16]);
 194   1              smgshow_bit(2, ~t_display[17]);
 195   1              smgshow_bit(3, ~t_display[ds1302_buff[1] / 16]);
 196   1              smgshow_bit(4, ~t_display[ds1302_buff[1] % 16]);
 197   1              smgshow_bit(5, ~t_display[17]);
 198   1              smgshow_bit(6, ~t_display[ds1302_buff[0] / 16]);
 199   1              smgshow_bit(7, ~t_display[ds1302_buff[0] % 16]);
 200   1      }
 201          
 202          void smgshow_settime()
 203          {
 204   1              smgshow_bit(0, ~t_display[24]);
 205   1              smgshow_bit(1, ~t_display[1]);
 206   1              smgshow_bit(6, ~t_display[settime / 10]);
 207   1              smgshow_bit(7, ~t_display[settime % 10]);
 208   1      }
 209          
 210          void smgshow_setled()
 211          {
 212   1              smgshow_bit(0, ~t_display[24]);
 213   1              smgshow_bit(1, ~t_display[3]);
 214   1              smgshow_bit(7, ~t_display[setled]);
 215   1      }
 216          
 217          void smgshow()
 218          {
 219   1              if((s4_flag == 0) && (s5_flag == 0))
 220   1                      smgshow_ds1302();
 221   1              else if((s4_flag == 0) && (s5_flag == 1))
 222   1                      smgshow_temp();
 223   1              else if((s4_flag == 0) && (s5_flag == 2))
 224   1                      smgshow_volt();
 225   1              else if((s4_flag == 1) && (s5_flag == 0))
 226   1                      smgshow_settime();
 227   1              else if((s4_flag == 1) && (s5_flag == 1))
 228   1                      smgshow_settemp();
 229   1              else if((s4_flag == 1) && (s5_flag == 2))
 230   1                      smgshow_setled();
 231   1      }
 232          
 233          void Delay10ms()                //@12.000MHz
 234          {
 235   1              unsigned char i, j;
 236   1      
 237   1              i = 117;
 238   1              j = 184;
 239   1              do
C51 COMPILER V9.54   MAIN                                                                  06/10/2022 12:33:46 PAGE 5   

 240   1              {
 241   2                      while (--j);
 242   2              } while (--i);
 243   1      }
 244          
 245          void key_scan()
 246          {
 247   1              P30 = 1; P31 = 1; P32 = 0; P33 = 1;
 248   1              P34 = 1; P35 = 1; P42 = 1; P44 = 1;
 249   1              if(P44 == 0){                        //S5
 250   2                      Delay10ms();
 251   2                      if(P44 == 0){
 252   3                              while(P44 == 0){
 253   4                                      get_temp();
 254   4                                      pcf8591_adc(1);
 255   4                                      rd_ds1302();
 256   4                                      smgshow();
 257   4                              }
 258   3                              s5_flag++;
 259   3                              if(s5_flag == 3)
 260   3                                      s5_flag = 0;
 261   3                      }
 262   2              }if(P42 == 0){                        //S9
 263   2                      Delay10ms();
 264   2                      if(P42 == 0){
 265   3                              while(P42 == 0){
 266   4                                      get_temp();
 267   4                                      pcf8591_adc(1);
 268   4                                      rd_ds1302();
 269   4                                      smgshow();
 270   4                              }
 271   3                              if(s4_flag){          //处于参数界面参数加1
 272   4                                      if(s5_flag == 0){
 273   5                                              settime++;
 274   5                                              if(settime > 23)
 275   5                                                      settime = 0;
 276   5                                      }else if(s5_flag == 1){
 277   5                                              settemp++;
 278   5                                      }else if(s5_flag == 2){
 279   5                                              setled++;
 280   5                                              if(setled > 8)
 281   5                                                      setled = 4;
 282   5                                      }
 283   4                              }
 284   3                      }
 285   2              }
 286   1              P30 = 1; P31 = 1; P32 = 1; P33 = 0;
 287   1              P34 = 1; P35 = 1; P42 = 1; P44 = 1;
 288   1              if(P44 == 0){                        //S4
 289   2                      Delay10ms();
 290   2                      if(P44 == 0){
 291   3                              while(P44 == 0){
 292   4                                      get_temp();
 293   4                                      pcf8591_adc(1);
 294   4                                      rd_ds1302();
 295   4                                      smgshow();
 296   4                              }
 297   3                              s4_flag = !s4_flag;
 298   3                              s5_flag = 0;              //确保按下S4显示时间参数或时间数据
 299   3                              if(s4_flag == 0){         //进入数据界面，参数生效
 300   4                                      real_settime = settime;
 301   4                                      real_settemp = settemp;
C51 COMPILER V9.54   MAIN                                                                  06/10/2022 12:33:46 PAGE 6   

 302   4                                      real_setled = setled;
 303   4                              }
 304   3                      }
 305   2              }if(P42 == 0){                        //S8
 306   2                      Delay10ms();
 307   2                      if(P42 == 0){
 308   3                              while(P42 == 0){
 309   4                                      get_temp();
 310   4                                      pcf8591_adc(1);
 311   4                                      rd_ds1302();
 312   4                                      smgshow();
 313   4                              }
 314   3                              if(s4_flag){          //处于参数界面参数减1
 315   4                                      if(s5_flag == 0){
 316   5                                              settime--;
 317   5                                              if(settime < 0)
 318   5                                                      settime = 23;
 319   5                                      }else if(s5_flag == 1){
 320   5                                              settemp--;
 321   5                                      }else if(s5_flag == 2){
 322   5                                              setled--;
 323   5                                              if(setled < 4)
 324   5                                                      setled = 8;
 325   5                                      }
 326   4                              }
 327   3                      }
 328   2              }
 329   1      }
 330          
 331          void led_work()
 332          {
 333   1              u8 hour;
 334   1              
 335   1              hour = (ds1302_buff[2] / 16) * 10 + (ds1302_buff[2] % 16);  //时
 336   1              if(((hour >= real_settime) && (hour < 24)) || ((hour > 0) && (hour < 8))){
 337   2                      hc138_select(4);
 338   2                      P0 &= ~(1 << 0);
 339   2              }else{
 340   2                      hc138_select(4);
 341   2                      P0 |= 1 << 0;
 342   2              }
 343   1              if(temp < (real_settemp * 10)){
 344   2                      hc138_select(4);
 345   2                      P0 &= ~(1 << 1);
 346   2              }else{
 347   2                      hc138_select(4);
 348   2                      P0 |= (1 << 1);
 349   2              }
 350   1              if(volt > 230){
 351   2                      volt_flag = 0;
 352   2              }
 353   1              else{
 354   2                      volt_flag = 1;
 355   2                      hc138_select(4);
 356   2                      P0 &= ~(1 << (real_setled - 1));
 357   2              }
 358   1              if(pre_voltflag != volt_flag)
 359   1                      t0_cnt = 0;
 360   1              pre_voltflag = volt_flag;
 361   1              if(L3_flag){
 362   2                      hc138_select(4);
 363   2                      P0 &= ~(1 << 2);
C51 COMPILER V9.54   MAIN                                                                  06/10/2022 12:33:46 PAGE 7   

 364   2              }else{
 365   2                      hc138_select(4);
 366   2                      P0 |= 1 << 2;
 367   2              }
 368   1      }
 369          
 370          void sys_init()
 371          {
 372   1              hc138_select(4);
 373   1              P0 = 0xff;
 374   1              hc138_select(5);
 375   1              P0 = 0x00;
 376   1      }
 377          
 378          void main()
 379          {
 380   1              sys_init();
 381   1              wr_ds1302();
 382   1              tim0_init();
 383   1              while(1)
 384   1              {
 385   2                      get_temp();
 386   2                      pcf8591_adc(1);
 387   2                      rd_ds1302();
 388   2                      key_scan();
 389   2                      smgshow();
 390   2                      led_work();
 391   2              }
 392   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1561    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.54   MAIN                                                                  06/11/2022 18:36:11 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "iic.h"
   3          #include "onewire.h"
   4          
   5          typedef unsigned char u8;
   6          typedef unsigned int u16;
   7          
   8          u8 templ, temph;
   9          u16 temp; u16 pre_temp;
  10          u16 t0_cnt = 0;
  11          u16 t1_cnt = 0;
  12          u16 pulse; u16 pre_pulse;
  13          u8 volt; u8 pre_volt;
  14          u8 setvolt = 10;  //扩大了十倍
  15          u8 s4_flag = 0;
  16          u8 s6_flag = 0;
  17          bit showdat_flag = 1;     //显示数据
  18          bit showback_flag = 0;     //显示回显
  19          u8 s7_flag = 0;
  20          bit flag_1s = 0;
  21          u8 cnt_200ms = 0;
  22          bit flag_200ms = 0;
  23          
  24          u8 code t_display[]={                       //标准字库
  25          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  26              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  27          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  28              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e};
  29          u8 code dot_display[]={0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 
             -7. 8. 9. -1
  30          
  31          void smgshow();
  32          
  33          
  34          void hc138_select(u8 n)
  35          {
  36   1              switch(n)
  37   1              {
  38   2                      case 4:
  39   2                              P2 = P2 & 0x1f | 0x80;  break;
  40   2                      case 5:
  41   2                              P2 = P2 & 0x1f | 0xa0;  break;
  42   2                      case 6:
  43   2                              P2 = P2 & 0x1f | 0xc0;  break;
  44   2                      case 7:
  45   2                              P2 = P2 & 0x1f | 0xe0;  break;
  46   2              }
  47   1      }
  48          
  49          void smg_delay()
  50          {
  51   1              u8 t = 100;
  52   1              while(t--);
  53   1      }
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 18:36:11 PAGE 2   

  54          
  55          void smgshow_bit(u8 pos, u8 dat)
  56          {
  57   1              hc138_select(6);
  58   1              P0 = 1 << pos;
  59   1              hc138_select(7);
  60   1              P0 = dat;
  61   1              smg_delay();
  62   1              P0 = 0xff;
  63   1      }
  64          
  65          void delay(u8 t)
  66          {
  67   1              while(t--){
  68   2                      smgshow();
  69   2              }
  70   1      }
  71          void get_temp()
  72          {
  73   1              init_ds18b20();
  74   1              Write_DS18B20(0xcc);
  75   1              Write_DS18B20(0x44);
  76   1              delay(20);
  77   1              init_ds18b20();
  78   1              Write_DS18B20(0xcc);
  79   1              Write_DS18B20(0xbe);
  80   1              
  81   1              templ = Read_DS18B20();
  82   1              temph = Read_DS18B20();
  83   1              temp = temph;
  84   1              temp = (temp << 8) | templ;
  85   1              if((temp & 0xf800) == 0x0000){
  86   2                      temp = (temp >> 4) * 100 + (temp & 0x0f) * 6.25;
  87   2              }
  88   1      }
  89          void smgshow_temp()
  90          {
  91   1              smgshow_bit(0, ~t_display[12]);
  92   1              smgshow_bit(4, ~t_display[temp / 1000]);
  93   1              smgshow_bit(5, ~dot_display[temp / 100 % 10]);
  94   1              smgshow_bit(6, ~t_display[temp / 10 % 10]);
  95   1              smgshow_bit(7, ~t_display[temp % 10]);
  96   1      }
  97          void smg_callbacktemp()
  98          {
  99   1              smgshow_bit(0, ~t_display[18]);
 100   1              smgshow_bit(1, ~t_display[12]);
 101   1              smgshow_bit(4, ~t_display[pre_temp / 1000]);
 102   1              smgshow_bit(5, ~dot_display[pre_temp / 100 % 10]);
 103   1              smgshow_bit(6, ~t_display[pre_temp / 10 % 10]);
 104   1              smgshow_bit(7, ~t_display[pre_temp % 10]);
 105   1      }
 106          
 107          void tim_init()
 108          {
 109   1              TMOD = 0x16;
 110   1              TH1 = (65535 - 50000) / 256;
 111   1              TL1 = (65535 - 50000) % 256;
 112   1              TH0 = 0xff;
 113   1              TL0 = 0xff;
 114   1              ET1 = 1;
 115   1              ET0 = 1;
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 18:36:11 PAGE 3   

 116   1              TR0 = 1;
 117   1              TR1 = 1;
 118   1              EA = 1;
 119   1      }
 120          void tim0() interrupt 1
 121          {
 122   1              t0_cnt++;
 123   1      }
 124          void tim1() interrupt 3
 125          {
 126   1              TH1 = (65535 - 50000) / 256;
 127   1              TL1 = (65535 - 50000) % 256;
 128   1              t1_cnt++;
 129   1              cnt_200ms++;
 130   1              if(cnt_200ms == 4){
 131   2                      cnt_200ms = 0;
 132   2                      flag_200ms = !flag_200ms;
 133   2              }
 134   1              if(t1_cnt == 20){
 135   2                      flag_1s = 1;
 136   2                      t1_cnt = 0;
 137   2                      pulse = t0_cnt;
 138   2                      t0_cnt = 0;
 139   2              }
 140   1      }
 141          void smgshow_pulse()
 142          {
 143   1              smgshow_bit(0, ~t_display[15]);
 144   1              if(pulse > 9999)
 145   1                      smgshow_bit(3, ~t_display[pulse / 10000]);
 146   1              if(pulse > 999)
 147   1                      smgshow_bit(4, ~t_display[pulse / 1000 % 10]);
 148   1              if(pulse > 99)
 149   1                      smgshow_bit(5, ~t_display[pulse / 100 % 10]);
 150   1              if(pulse > 9)
 151   1                      smgshow_bit(6, ~t_display[pulse / 10 % 10]);
 152   1              smgshow_bit(7, ~t_display[pulse % 10]);
 153   1      }
 154          void smg_callbackpulse()
 155          {
 156   1              smgshow_bit(0, ~t_display[18]);
 157   1              smgshow_bit(1, ~t_display[15]);
 158   1              if(pre_pulse > 9999)
 159   1                      smgshow_bit(3, ~t_display[pre_pulse / 10000]);
 160   1              if(pre_pulse > 999)
 161   1                      smgshow_bit(4, ~t_display[pre_pulse / 1000 % 10]);
 162   1              if(pre_pulse > 99)
 163   1                      smgshow_bit(5, ~t_display[pre_pulse / 100 % 10]);
 164   1              if(pre_pulse > 9)
 165   1                      smgshow_bit(6, ~t_display[pre_pulse / 10 % 10]);
 166   1              smgshow_bit(7, ~t_display[pre_pulse % 10]);
 167   1      }
 168          
 169          void pcf8591_adc(u8 channel)
 170          {
 171   1              u8 dat;
 172   1              IIC_Start();
 173   1              IIC_SendByte(0x90);
 174   1              IIC_WaitAck();
 175   1              IIC_SendByte(channel);
 176   1              IIC_WaitAck();
 177   1              
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 18:36:11 PAGE 4   

 178   1              IIC_Start();
 179   1              IIC_SendByte(0x91);
 180   1              IIC_WaitAck();
 181   1              dat = IIC_RecByte();
 182   1              IIC_SendAck(1);
 183   1              IIC_Stop();
 184   1              volt = dat * 0.1961;
 185   1              if(volt > setvolt){
 186   2                      hc138_select(4);
 187   2                      if(flag_200ms)
 188   2                              P07 = 0;
 189   2                      else
 190   2                              P07 = 1;
 191   2              }
 192   1      }
 193          void smgshow_volt()
 194          {
 195   1              smgshow_bit(0, ~t_display[25]);
 196   1              smgshow_bit(6, ~dot_display[volt / 10]);
 197   1              smgshow_bit(7, ~t_display[volt % 10]);
 198   1      }
 199          void smgshow_setvolt()
 200          {
 201   1              smgshow_bit(0, ~t_display[24]);
 202   1              smgshow_bit(6, ~dot_display[setvolt / 10]);
 203   1              smgshow_bit(7, ~t_display[setvolt % 10]);
 204   1      }
 205          void smg_callbackvolt()
 206          {
 207   1              smgshow_bit(0, ~t_display[18]);
 208   1              smgshow_bit(1, ~t_display[25]);
 209   1              smgshow_bit(6, ~dot_display[pre_volt / 10]);
 210   1              smgshow_bit(7, ~t_display[pre_volt % 10]);
 211   1      }
 212          
 213          void Delay5ms()         //@11.0592MHz
 214          {
 215   1              unsigned char i, j;
 216   1      
 217   1              i = 54;
 218   1              j = 199;
 219   1              do
 220   1              {
 221   2                      while (--j);
 222   2              } while (--i);
 223   1      }
 224          u8 rd_eeprom(u8 addr)
 225          {
 226   1              u8 dat;
 227   1              IIC_Start();
 228   1              IIC_SendByte(0xa0);
 229   1              IIC_WaitAck();
 230   1              IIC_SendByte(addr);
 231   1              IIC_WaitAck();
 232   1              
 233   1              IIC_Start();
 234   1              IIC_SendByte(0xa1);
 235   1              IIC_WaitAck();
 236   1              dat = IIC_RecByte();
 237   1              IIC_SendAck(1);
 238   1              IIC_Stop();
 239   1              return dat;
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 18:36:11 PAGE 5   

 240   1      }
 241          void wr_eeprom(u8 addr, u8 dat)
 242          {
 243   1              IIC_Start();
 244   1              IIC_SendByte(0xa0);
 245   1              IIC_WaitAck();
 246   1              IIC_SendByte(addr);
 247   1              IIC_WaitAck();
 248   1              IIC_SendByte(dat);
 249   1              IIC_WaitAck();
 250   1              IIC_Stop();
 251   1      }
 252          void rd_eepdat()
 253          {
 254   1              u8 tempbuffl;
 255   1              u16 tempbuffh;
 256   1              u8 pulsebuffl;
 257   1              u16 pulsebuffh;
 258   1              
 259   1              tempbuffh = rd_eeprom(1);
 260   1              tempbuffl = rd_eeprom(2);
 261   1              pre_temp = (tempbuffh << 8) | tempbuffl;
 262   1              Delay5ms();
 263   1              pre_volt = rd_eeprom(3);
 264   1              pulsebuffh = rd_eeprom(4);
 265   1              pulsebuffl = rd_eeprom(5);
 266   1              pre_pulse = (pulsebuffh << 8) | pulsebuffl;
 267   1      }
 268          
 269          void Delay10ms()                //@11.0592MHz
 270          {
 271   1              unsigned char i, j;
 272   1      
 273   1              i = 108;
 274   1              j = 145;
 275   1              do
 276   1              {
 277   2                      while (--j);
 278   2              } while (--i);
 279   1      }
 280          void key_scan()
 281          {
 282   1              u16 i = 0;
 283   1              if(s7_flag == 0){
 284   2                      if(P33 == 0){             //S4
 285   3                              Delay10ms();
 286   3                              if(P33 == 0){
 287   4                                      while(P33 == 0){
 288   5                                              smgshow();
 289   5                                      }
 290   4                                      showdat_flag = 1;
 291   4                                      showback_flag = 0;
 292   4                                      s4_flag++;
 293   4                                      if(s4_flag > 2)
 294   4                                              s4_flag = 0;
 295   4                              }
 296   3                      }
 297   2                      if(P32 == 0){             //S5
 298   3                              Delay10ms();
 299   3                              if(P32 == 0){
 300   4                                      while(P32 == 0){
 301   5                                              smgshow();
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 18:36:11 PAGE 6   

 302   5                                      }
 303   4                                      wr_eeprom(1, (temp >> 8));      //存储温度高八位
 304   4                                      Delay5ms();
 305   4                                      wr_eeprom(2, (temp & 0x00ff));  //存储温度低八位
 306   4                                      Delay5ms();
 307   4                                      wr_eeprom(3, volt);             //存储电压
 308   4                                      Delay5ms();
 309   4                                      wr_eeprom(4, (pulse >> 8));     //存储频率高八位
 310   4                                      Delay5ms();
 311   4                                      wr_eeprom(5, (pulse & 0x00ff)); //存储频率低八位
 312   4                                      Delay5ms();
 313   4                                      pre_pulse = pulse;              //回显变量
 314   4                                      pre_temp = temp;
 315   4                                      pre_volt = volt;
 316   4                              }
 317   3                      }
 318   2              }
 319   1              if(P31 == 0){             //S6
 320   2                      Delay10ms();
 321   2                      if(P31 == 0){
 322   3                              if(s7_flag == 0){          //切换回显界面
 323   4                                      while(P31 == 0){
 324   5                                              smgshow();
 325   5                                      }
 326   4                                      showdat_flag = 0;
 327   4                                      showback_flag = 1;
 328   4                                      s6_flag++;
 329   4                                      if(s6_flag > 2)
 330   4                                              s6_flag = 0;
 331   4                              }else{                    //调整参数
 332   4                                      while(P31 == 0)       //长按快增
 333   4                                      {
 334   5                                              t1_cnt = 0;
 335   5                                              while(P31 == 0){
 336   6                                                      if(flag_1s){
 337   7                                                              i++;
 338   7                                                              if(i > 1000){
 339   8                                                                      i = 0;
 340   8                                                                      if(setvolt < 50)
 341   8                                                                              setvolt++;
 342   8                                                              }
 343   7                                                      }
 344   6                                                      smgshow();
 345   6                                                      pcf8591_adc(3);
 346   6                                              }
 347   5                                              flag_1s = 0;
 348   5                                      }
 349   4                                      if(setvolt < 50)
 350   4                                              setvolt++;
 351   4                              }
 352   3                      }
 353   2              }
 354   1              if(P30 == 0){             //S7
 355   2                      Delay10ms();
 356   2                      if(P30 == 0){
 357   3                              while(P30 == 0){
 358   4                                      smgshow();
 359   4                              }
 360   3                              showdat_flag = 0;
 361   3                              showback_flag = 0;
 362   3                              s7_flag = !s7_flag;
 363   3                              if(s7_flag == 0)      //退出参数设置界面,进入数据界面
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 18:36:11 PAGE 7   

 364   3                                      showdat_flag = 1;
 365   3                      }
 366   2              }
 367   1      }
 368          
 369          void smgshow()
 370          {
 371   1              if(showdat_flag){
 372   2                      if(s4_flag == 0){
 373   3                              smgshow_temp();
 374   3                              hc138_select(4);
 375   3                              P00 = 0; P01 = 1; P02 = 1;
 376   3                      }
 377   2                      else if(s4_flag == 1){
 378   3                              smgshow_volt();
 379   3                              hc138_select(4);
 380   3                              P00 = 1; P01 = 1; P02 = 0;
 381   3                      }
 382   2                      else if(s4_flag == 2){
 383   3                              smgshow_pulse();
 384   3                              hc138_select(4);
 385   3                              P00 = 1; P01 = 0; P02 = 1;
 386   3                      }
 387   2              }
 388   1              if(showback_flag){
 389   2                      if(s6_flag == 1)
 390   2                              smg_callbacktemp();
 391   2                      else if(s6_flag == 2)
 392   2                              smg_callbackvolt();
 393   2                      else if(s6_flag == 0)
 394   2                              smg_callbackpulse();
 395   2              }
 396   1              if(s7_flag)
 397   1              {
 398   2                      smgshow_setvolt();
 399   2              }
 400   1      }
 401          
 402          void sys_init()
 403          {
 404   1              hc138_select(4);
 405   1              P0 = 0xff;
 406   1              hc138_select(5);
 407   1              P0 = 0x00;
 408   1      }
 409          
 410          void main()
 411          {
 412   1              sys_init();
 413   1              tim_init();
 414   1              rd_eepdat();
 415   1      
 416   1              while(1)
 417   1              {
 418   2                      get_temp();
 419   2                      pcf8591_adc(3);
 420   2                      key_scan();
 421   2                      smgshow();
 422   2              }
 423   1      }


C51 COMPILER V9.54   MAIN                                                                  06/11/2022 18:36:11 PAGE 8   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1831    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\installed file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include <string.h>
   3          #include <stdio.h>
   4          #include "onewire.h"
   5          #include "iic.h"
   6          
   7          typedef unsigned char u8;
   8          typedef unsigned int u16;
   9          
  10          u8 templ, temph;
  11          u16 temp;
  12          u8 dist;
  13          u8 set_temp = 30;  u8 preset_temp;
  14          u8 set_dist = 35;  u8 preset_dist;
  15          u8 s13_flag = 0, s12_flag = 0, s16_flag = 0, s17_flag = 0;
  16          u16 change_time = 0;   //参数改变次数
  17          u8 cnt_1s = 0;
  18          bit flag_1s = 0;
  19          bit dac_flag = 0;
  20          u8 uart_rcvdat[12] = {'\0'};
  21          u8 rcv_seq = 0;
  22          bit rcv_flag = 0;        //串口接收标志
  23          
  24          u8 code t_display[]={                       //标准字库
  25          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  26              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  27          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  28              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,0xc8};
  29          u8 code dot_display[]={0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 
             -7. 8. 9. -1
  30          
  31          sbit TX = P1^0;
  32          sbit RX = P1^1;
  33          
  34          void smgshow();
  35          
  36          void hc138_select(u8 n)
  37          {
  38   1              switch(n)
  39   1              {
  40   2                      case 4:
  41   2                              P2 = P2 & 0x1f | 0x80;  break;
  42   2                      case 5:
  43   2                              P2 = P2 & 0x1f | 0xa0;  break;
  44   2                      case 6:
  45   2                              P2 = P2 & 0x1f | 0xc0;  break;
  46   2                      case 7:
  47   2                              P2 = P2 & 0x1f | 0xe0;  break;
  48   2              }
  49   1      }
  50          
  51          void smg_delay()
  52          {
  53   1              u8 t = 100;
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 2   

  54   1              while(t--);
  55   1      }
  56          
  57          void smgshow_bit(u8 pos, u8 dat)
  58          {
  59   1              hc138_select(6);
  60   1              P0 = 1 << pos;
  61   1              hc138_select(7);
  62   1              P0 = dat;
  63   1              smg_delay();
  64   1              P0 = 0xff;
  65   1      }
  66          
  67          void delay(u8 t)
  68          {
  69   1              while(t--)
  70   1                      smgshow();
  71   1      }
  72          
  73          void get_temp()
  74          {
  75   1              init_ds18b20();
  76   1              Write_DS18B20(0xcc);
  77   1              Write_DS18B20(0x44);
  78   1              delay(20);
  79   1              init_ds18b20();
  80   1              Write_DS18B20(0xcc);
  81   1              Write_DS18B20(0xbe);
  82   1              
  83   1              templ = Read_DS18B20();
  84   1              temph = Read_DS18B20();
  85   1              temp = temph;
  86   1              temp = (temp << 8) | templ;
  87   1              if((temp & 0xf800) == 0x0000){
  88   2                      temp = (temp >> 4) * 100 + (temp & 0x0f) * 6.25;
  89   2              }
  90   1      }
  91          
  92          void get_temp_init()   //防止出现85
  93          {
  94   1              do{
  95   2                      init_ds18b20();
  96   2                      Write_DS18B20(0xcc);
  97   2                      Write_DS18B20(0x44);
  98   2              //      delay();
  99   2                      init_ds18b20();
 100   2                      Write_DS18B20(0xcc);
 101   2                      Write_DS18B20(0xbe);
 102   2                      
 103   2                      templ = Read_DS18B20();
 104   2                      temph = Read_DS18B20();
 105   2                      temp = temph;
 106   2                      temp = (temp << 8) | templ;
 107   2                      if((temp & 0xf800) == 0x0000){
 108   3                              temp = (temp >> 4) * 100 + (temp & 0x0f) * 6.25;
 109   3                      }
 110   2              }while(temp == 8500);
 111   1      }
 112          
 113          void smgshow_temp()
 114          {
 115   1              smgshow_bit(0, ~t_display[12]);
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 3   

 116   1              smgshow_bit(4, ~t_display[temp / 1000]);
 117   1              smgshow_bit(5, ~dot_display[temp / 100 % 10]);
 118   1              smgshow_bit(6, ~t_display[temp / 10 % 10]);
 119   1              smgshow_bit(7, ~t_display[temp % 10]);
 120   1      }
 121          
 122          void smgshow_settemp()
 123          {
 124   1              smgshow_bit(0, ~t_display[24]);
 125   1              smgshow_bit(3, ~t_display[1]);
 126   1              smgshow_bit(6, ~t_display[set_temp / 10]);
 127   1              smgshow_bit(7, ~t_display[set_temp % 10]);
 128   1      }
 129          
 130          void pcf8591_dac(u8 dat)
 131          {
 132   1              IIC_Start();
 133   1              IIC_SendByte(0x90);
 134   1              IIC_WaitAck();
 135   1              IIC_SendByte(0x40);
 136   1              IIC_WaitAck();
 137   1              IIC_SendByte(dat);
 138   1              IIC_WaitAck();
 139   1              IIC_Stop();
 140   1      }
 141          
 142          void Delay12us()                //@12.000MHz
 143          {
 144   1              unsigned char i;
 145   1      
 146   1              _nop_();
 147   1              _nop_();
 148   1              i = 33;
 149   1              while (--i);
 150   1      }
 151          
 152          void sendwave()
 153          {
 154   1              u8 i;
 155   1              for(i = 0; i < 8; i++){
 156   2                      TX = 1;
 157   2                      Delay12us();
 158   2                      TX = 0;
 159   2                      Delay12us();
 160   2              }
 161   1      }
 162          
 163          void measure_dist()   //定时器1 16位自动
 164          {
 165   1              u16 time;
 166   1              
 167   1              TMOD &= 0x0f;
 168   1              TH1 = 0;
 169   1              TL1 = 0;
 170   1              sendwave();
 171   1              TR1 = 1;
 172   1              while((RX == 1) && (TF1 == 0));
 173   1              TR1 = 0;
 174   1              if(TF1 == 0){
 175   2                      time = TH1;
 176   2                      time = (time << 8) | TL1;
 177   2                      dist = time * 0.017;
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 4   

 178   2                      if((dist < 10) || (dist > 50))
 179   2                              dist = 99;
 180   2              }else{
 181   2                      TF1 = 0;
 182   2                      dist = 99;
 183   2              }
 184   1      }
 185          
 186          void smgshow_dist()
 187          {
 188   1              smgshow_bit(0, ~t_display[21]);
 189   1              if(dist > 9)
 190   1                      smgshow_bit(6, ~t_display[dist / 10]);
 191   1              smgshow_bit(7, ~t_display[dist % 10]);
 192   1      }
 193          
 194          void smgshow_setdist()
 195          {
 196   1              smgshow_bit(0, ~t_display[24]);
 197   1              smgshow_bit(3, ~t_display[2]);
 198   1              smgshow_bit(6, ~t_display[set_dist / 10]);
 199   1              smgshow_bit(7, ~t_display[set_dist % 10]);
 200   1      }
 201          
 202          void wr_eeprom(u8 addr, u8 dat)
 203          {
 204   1              IIC_Start();
 205   1              IIC_SendByte(0xa0);
 206   1              IIC_WaitAck();
 207   1              IIC_SendByte(addr);
 208   1              IIC_WaitAck();
 209   1              IIC_SendByte(dat);
 210   1              IIC_WaitAck();
 211   1              IIC_Stop();
 212   1      }
 213          
 214          //u8 rd_eeprom(u8 addr)
 215          //{
 216          //      u8 dat
 217          //      IIC_Start();
 218          //      IIC_SendByte(0xa0);
 219          //      IIC_WaitAck();
 220          //      IIC_SendByte(addr);
 221          //      IIC_WaitAck();
 222          //      
 223          //      IIC_Start();
 224          //      IIC_SendByte(0xa1);
 225          //      IIC_WaitAck();
 226          //      IIC_RecByte();
 227          //      IIC_Stop();
 228          //}
 229          
 230          void smgshow_change()
 231          {
 232   1              smgshow_bit(0, t_display[32]);
 233   1              if(change_time > 9999)
 234   1                      smgshow_bit(3, ~t_display[change_time / 10000]);
 235   1              if(change_time > 999)
 236   1                      smgshow_bit(4, ~t_display[change_time / 1000 % 10]);
 237   1              if(change_time > 99)
 238   1                      smgshow_bit(5, ~t_display[change_time / 100 % 10]);
 239   1              if(change_time > 9)
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 5   

 240   1                      smgshow_bit(6, ~t_display[change_time / 10 % 10]);
 241   1              smgshow_bit(7, ~t_display[change_time % 10]);
 242   1      }
 243          
 244          void tim0_init()
 245          {
 246   1              TMOD = TMOD & 0xf0 | 0x01;
 247   1              TH0 = (65535 - 50000) / 256;
 248   1              TL0 = (65535 - 50000) % 256;
 249   1              TR0 = 1;
 250   1              ET0 = 1;
 251   1              EA = 1;
 252   1      }
 253          
 254          void tim0() interrupt 1
 255          {
 256   1              TH0 = (65535 - 50000) / 256;
 257   1              TL0 = (65535 - 50000) % 256;
 258   1              cnt_1s++;
 259   1              if(cnt_1s == 20){
 260   2                      cnt_1s = 0;
 261   2                      flag_1s = 1;
 262   2              }
 263   1      }
 264          
 265          void smgshow()
 266          {
 267   1              if(s13_flag == 0){             //数据界面
 268   2                      if(s12_flag == 0)
 269   2                              smgshow_temp();
 270   2                      else if(s12_flag == 1)
 271   2                              smgshow_dist();
 272   2                      else if(s12_flag == 2)             //变更次数
 273   2                              smgshow_change();
 274   2              }
 275   1              else if(s13_flag){             //参数界面
 276   2                      if(s12_flag == 0)
 277   2                              smgshow_settemp();
 278   2                      else if(s12_flag == 1)
 279   2                              smgshow_setdist();
 280   2              }
 281   1      }
 282          
 283          void UartInit(void)             //4800bps@12.000MHz
 284          {
 285   1              SCON = 0x50;            //8位数据,可变波特率
 286   1              AUXR |= 0x01;           //串口1选择定时器2为波特率发生器
 287   1              AUXR |= 0x04;           //定时器2时钟为Fosc,即1T
 288   1              T2L = 0x8F;             //设定定时初值
 289   1              T2H = 0xFD;             //设定定时初值
 290   1              AUXR |= 0x10;           //启动定时器2
 291   1              
 292   1              ES = 1;
 293   1      }
 294          
 295          void uart_send(u8 dat)
 296          {
 297   1              SBUF = dat;
 298   1              while(TI == 0);
 299   1              TI = 0;
 300   1      }
 301          
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 6   

 302          void send_str(u8 *str)
 303          {
 304   1              while(*str != '\0'){
 305   2                      uart_send(*str);
 306   2                      str++;
 307   2              }
 308   1      }
 309          
 310          void uart_rcv() interrupt 4
 311          {
 312   1              if(RI == 1){
 313   2                      RI = 0;
 314   2                      rcv_flag = 1;
 315   2                      uart_rcvdat[rcv_seq] = SBUF;
 316   2                      rcv_seq++;
 317   2              }
 318   1      }
 319          
 320          void uart_detect()
 321          {
 322   1              u8 sendbuff[20] = {'\0'};
 323   1              
 324   1              if(rcv_flag){
 325   2                      rcv_flag = 0;
 326   2                      delay(100);      //等待串口接收完成
 327   2                      if(strcmp(uart_rcvdat, "ST\r\n") == 0){
 328   3                              rcv_seq = 0;
 329   3                              memset(uart_rcvdat, '\0', sizeof(uart_rcvdat));
 330   3                              sprintf(sendbuff, "$%d,%d.%d\r\n", (u16)dist, (u16)(temp / 100), (u16)(temp % 100));
 331   3                              send_str(sendbuff);
 332   3                      }else if(strcmp(uart_rcvdat, "PARA\r\n") == 0){
 333   3                              rcv_seq = 0;
 334   3                              memset(uart_rcvdat, '\0', sizeof(uart_rcvdat));
 335   3                              sprintf(sendbuff, "#%d,%d\r\n", (u16)set_dist, (u16)set_temp);
 336   3                              send_str(sendbuff);
 337   3                      }else if(strlen(uart_rcvdat)){
 338   3                              rcv_seq = 0;
 339   3                              memset(uart_rcvdat, '\0', sizeof(uart_rcvdat));
 340   3                              sprintf(sendbuff, "ERROR\r\n");
 341   3                              send_str(sendbuff);
 342   3                      }
 343   2              }
 344   1      }
 345          
 346          void led_work()
 347          {
 348   1              if(temp > (set_temp * 100)){
 349   2                      hc138_select(4);
 350   2                      P00 = 0;
 351   2              }else{
 352   2                      hc138_select(4);
 353   2                      P00 = 1;
 354   2              }
 355   1              if(dist < set_dist){
 356   2                      hc138_select(4);
 357   2                      P01 = 0;
 358   2              }else{
 359   2                      hc138_select(4);
 360   2                      P01 = 1;
 361   2              }
 362   1              if(dac_flag){
 363   2                      hc138_select(4);
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 7   

 364   2                      P02 = 0;
 365   2              }else{
 366   2                      hc138_select(4);
 367   2                      P02 = 1;
 368   2              }
 369   1      }
 370          
 371          void Delay10ms()                //@12.000MHz
 372          {
 373   1              unsigned char i, j;
 374   1      
 375   1              i = 117;
 376   1              j = 184;
 377   1              do
 378   1              {
 379   2                      while (--j);
 380   2              } while (--i);
 381   1      }
 382          
 383          void key_scan()
 384          {
 385   1              P30 = 1; P31 = 1; P32 = 0; P33 = 1;
 386   1              P34 = 1; P35 = 1; P42 = 1; P44 = 1;
 387   1              if(P35 == 0){                        //S13
 388   2                      Delay10ms();
 389   2                      if(P35 == 0){
 390   3                              while(P35 == 0)
 391   3                              {
 392   4                                      cnt_1s = 0;
 393   4                                      flag_1s = 0;
 394   4                                      while(P35 == 0){
 395   5                                              measure_dist();
 396   5                                              get_temp();
 397   5                                              smgshow();
 398   5                                              led_work();
 399   5                                      }
 400   4                              }
 401   3                              if(flag_1s){            //长按
 402   4                                      flag_1s = 0;
 403   4                                      dac_flag = !dac_flag;
 404   4                              }
 405   3                              else{                   //短按
 406   4                                      s13_flag = !s13_flag;
 407   4                                      s12_flag = 0;
 408   4                                      if(s13_flag){         //进入参数界面
 409   5                                              preset_temp = set_temp;
 410   5                                              preset_dist = set_dist;
 411   5                                      }else{                //退出参数界面
 412   5                                              if(preset_temp != set_temp)
 413   5                                                      change_time++;
 414   5                                              if(preset_dist != set_dist)
 415   5                                                      change_time++;
 416   5                                              if((preset_temp != set_temp) || (preset_dist != set_dist)){
 417   6                                                      if(change_time > 255){
 418   7                                                              wr_eeprom(2, (change_time >> 8));
 419   7                                                              Delay10ms();
 420   7                                                      }
 421   6                                                      wr_eeprom(1, (change_time & 0xff));
 422   6                                              }
 423   5                                      }
 424   4                              }
 425   3                      }
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 8   

 426   2              }
 427   1              if(P34 == 0){                 //S17 加
 428   2                      Delay10ms();
 429   2                      if(P34 == 0){
 430   3                              while(P34 == 0)
 431   3                              {
 432   4                                      get_temp();
 433   4                                      smgshow();
 434   4                              }
 435   3                              if(s13_flag == 1){
 436   4                                      if(s12_flag == 0){      //温度参数加
 437   5                                              if(set_temp < 98){
 438   6                                                      set_temp += 2;
 439   6                                              }
 440   5                                      }
 441   4                                      else{
 442   5                                              if(set_dist < 95)  //距离参数加
 443   5                                                      set_dist += 5;
 444   5                                      }
 445   4                              }
 446   3                      }
 447   2              }
 448   1              P30 = 1; P31 = 1; P32 = 1; P33 = 0;
 449   1              P34 = 1; P35 = 1; P42 = 1; P44 = 1;
 450   1              if(P35 == 0){                         //S12
 451   2                      Delay10ms();
 452   2                      if(P35 == 0){
 453   3                              while(P35 == 0)
 454   3                              {
 455   4                                      cnt_1s = 0;
 456   4                                      flag_1s = 0;
 457   4                                      while(P35 == 0){
 458   5                                              get_temp();
 459   5                                              measure_dist();
 460   5                                              smgshow();
 461   5                                              led_work();
 462   5                                      }
 463   4                              }
 464   3                              if(flag_1s){               //长按
 465   4                                      flag_1s = 0;
 466   4                                      change_time = 0;
 467   4                              }
 468   3                              else{                      //短按
 469   4                                      s12_flag++;
 470   4                                      if((s13_flag == 0) && (s12_flag > 2))
 471   4                                              s12_flag = 0;
 472   4                                      if((s13_flag == 1) && (s12_flag > 1))
 473   4                                              s12_flag = 0;
 474   4                              }
 475   3                      }
 476   2              }
 477   1              if(P34 == 0){                 //S16减
 478   2                      Delay10ms();
 479   2                      if(P34 == 0){
 480   3                              while(P34 == 0)
 481   3                              {
 482   4                                      get_temp();
 483   4                                      smgshow();
 484   4                              }
 485   3                              if(s13_flag == 1){
 486   4                                      if(s12_flag == 0){      //温度参数减
 487   5                                              if(set_temp > 0)
C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 9   

 488   5                                                      set_temp -= 2;
 489   5                                      }
 490   4                                      else{
 491   5                                              if(set_dist > 0)  //距离参数减
 492   5                                                      set_dist -= 5;
 493   5                                      }
 494   4                              }
 495   3                      }
 496   2              }
 497   1      }
 498          
 499          void sys_init()
 500          {
 501   1              hc138_select(4);
 502   1              P0 = 0xff;
 503   1              hc138_select(5);
 504   1              P0 = 0x00;
 505   1      }
 506          
 507          void main()
 508          {
 509   1              u16 t = 0;
 510   1              
 511   1      //      wr_eeprom(1, 0);
 512   1      //      wr_eeprom(2, 0);
 513   1              get_temp_init();
 514   1              sys_init();
 515   1              tim0_init();
 516   1              UartInit();
 517   1              while(1)
 518   1              {
 519   2                      t++;
 520   2                      if(t == 30){
 521   3                              t = 0;
 522   3                              measure_dist();
 523   3                      }
 524   2                      get_temp();
 525   2                      key_scan();
 526   2                      uart_detect();
 527   2                      smgshow();
 528   2                      led_work();
 529   2                      if(dac_flag){
 530   3                              if(dist <= set_dist)
 531   3                                      pcf8591_dac(102);
 532   3                              else
 533   3                                      pcf8591_dac(204);
 534   3                      }else{
 535   3                              pcf8591_dac(21);
 536   3                      }
 537   2              }
 538   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1992    ----
   CONSTANT SIZE    =    105    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.54   MAIN                                                                  06/11/2022 11:34:35 PAGE 10  


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
